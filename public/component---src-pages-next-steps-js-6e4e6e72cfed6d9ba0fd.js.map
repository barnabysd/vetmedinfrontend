{"version":3,"sources":["webpack:///./src/components/FixedSIzeVideo.js","webpack:///./src/pages/next-steps.js"],"names":["FixedSIzeVideo","styled","div","React","forwardRef","props","ref","currentCaseStudySlideData","isCorrectAnswer","animationVideoName","mainImage","useState","isVideoLoaded","setIsVideoLoaded","style","display","flexDirection","justifyContent","alignContent","minHeight","width","backgroundColor","autoPlay","playsInline","muted","onLoadedData","loop","height","opacity","src","DogVideo","type","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","NextStepsQuestionResponseLayout","slideTypes","QUESTION_POSED","resources","navigationLeftHandler","navigationRightHandler","dogChoice","buttonLinks","field_buttonlinks","length","ANSWER_WITH_VIDEO","ANSWER_NO_VIDEO","field_iscorrectanswer","id","nextStepsSteps","title","url","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","useVideoWidget","answerHeader","replaceDogName","removeParagraphsTags","field_answerheader","answerText","field_answertext","processed","additionalText","field_additionalbodytext","videoText1","field_videocaptiontext1","CORRECT_ANSWER_RECHECK","INCORRECT_ALL_CLEAR","CORRECT_ANSWER_START_TREATMENT","questionText","field_questiontext","headerText","createRef","container","justify","border","item","xs","sm","align","currentSlidePosition","NextSteps","data","useCookies","cookies","setCookie","dogName","DUDLEY","initialState","step","state","setState","tasks","DUDLEY_GRADE_HEART_MURMUR","resourcesAr","get","resourcesAnswersAr","getSlideData","nextStepsSlugNames","console","log","setCurrentStep","handleLeftClick","e","handleRightClick","showPercentIndicator","to","distanceFromSide","bottom","direction","bottomNavigationLinkDirection","FORWARD","linkText","className","position","zIndex","currentTarget","CORRECT_ANSWER_XRAY_ONLY","pageQuery"],"mappings":"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","file":"component---src-pages-next-steps-js-6e4e6e72cfed6d9ba0fd.js","sourcesContent":["import React, {forwardRef} from \"react\"\nimport CustomFluidImage from '../components/CustomFluidImage';\nimport DogVideo from \"../assets/VET-2020-001Questions_Dudley_Sitting.mp4\"\nimport theme from \"../theme\"\nimport VideoCover from 'react-video-cover'\n\nimport Transcript from \"file-loader!../assets/transcript.vtt\"\nimport Captions from \"file-loader!../assets/captions.vtt\"\nimport Description from \"file-loader!../assets/description.vtt\"\n\nimport styled from 'styled-components'\nimport videoThumb from '../images/heart/dudley_sitting_thumbnail_blurred.jpg'\n// import ReactPlayer from \"react-player\"\n\n// class ResponsiveVideoPlayer extends Component {\n//     render () {\n//       return (\n//         <div className='player-wrapper'>\n//           <ReactPlayer\n//             className='react-player'\n//             url='https://www.youtube.com/watch?v=ysz5S6PUM-U'\n//             width='100%'\n//             height='100%'\n//           />\n//         </div>\n//       )\n//     }\n//   }\n\n// function getVid() {\n//     return \"http://localhost:8000/\" + (JSON.stringify(DogVideo).replace(/\"/g,'')).replace(/\\/static/g,'static');\n// }\n\n// did you hear valve heart\n\nexport const PoppySitting02 = styled.div`\n  height: 738px;\n  width: 570px;\n`; \n\nconst FixedSIzeVideo = React.forwardRef((props, ref) => {\n///const ResponseVideo = ({currentCaseStudySlideData})  => {\n    const {isCorrectAnswer, animationVideoName, mainImage} = props.currentCaseStudySlideData\n\n    const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n  \n    const onLoadedData = () => {\n      setIsVideoLoaded(true);\n    };\n\n    function getVideo(videoName) {\n        if (animationVideoName) {return DogVideo}\n        return DogVideo\n    }\n\n    // const videoOptions = {\n    //     id: \"myVideo\",\n    //     src: getVideo(animationVideoName),\n    //     ref: ref,\n    //     autoPlay: props.autoPlay ? props.autoPlay : false\n    // };\n     // <div style={{backgroundColor: theme.palette.cloudBlue.main}}>\n    return (\n       \n        <div style={{display:'flex',flexDirection:'column',justifyContent:'center',alignContent:'flex-start', minHeight:'100vh',width:'100%',backgroundColor: 'transparent'}}>\n\n              {/* {mainImage ? <CustomFluidImage imgName={mainImage} /> : ''}      */}\n\n              {/* <img src={videoThumb} alt=\"\" style={{ opacity: isVideoLoaded ? 0 : 1, width: `100%` }} /> */}\n\n              <video autoPlay playsInline muted onLoadedData={onLoadedData} loop={false} width='100%' height='560px' style={{ opacity: isVideoLoaded ? 1 : 0, width: \"100%\", height: \"560px\" }}>\n                  <source src={getVideo(animationVideoName)} type=\"video/mp4\" />\n              </video>\n\n        </div>\n    )\n})\n \nexport default FixedSIzeVideo","import React, {useState} from \"react\"\nimport Layout from '../components/layout'\nimport theme from \"../theme\"\n// import ReactPlayer from \"react-player\"\nimport \"./slideSection.css\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport CaseStudyLeftArrow from \"../components/CaseStudyLeftArrow\"\nimport CaseStudyRightArrow from \"../components/CaseStudyRightArrow\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResponse from \"../components/QuestionResponse\"\nimport QuestionPosed from \"../components/QuestionPosed\"\nimport ResponseVideo from \"../components/ResponseVideo\"\n\nimport BottomNavigationLink from \"../components/BottomNavigationLink\"\n\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport { processHtml, getSlideData, replaceDogName, removeParagraphsTags } from \"../utils/displayUtils\"\nimport { dogName, \n  ownerName, \n  ownerResponseSteps, \n  cookieKeyNames, \n  tasks, \n  slideTypes,\n  nextStepsSlugNames,\n  bottomNavigationLinkDirection,\n  nextStepsSteps,\n  legacyButtonTypes\n} from \"../WebsiteConstants\"\nimport FixedSIzeVideo from \"../components/FixedSIzeVideo\"\n\n//NB: - useEffect(() - very good reference https://dev.to/spukas/4-ways-to-useeffect-pf6\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n}));\n\nfunction NextSteps({data}) {\n\n   // =================== GET GLOBAL DATA ==================\n\n  const [cookies, setCookie, removeCookie] = useCookies(['hasConsentSet','userChoice','dogChoice','score']);\n  const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"] : dogName.DUDLEY\n\n  // =================== SETUP STATE ==================\n\n  const initialState = { step: nextStepsSteps.QUESTION_POSED }\n  const [state, setState] = useState(initialState)\n\n// =================== CHECK COMPLETION STATUS ==================\n\nif (state.step === nextStepsSteps.CORRECT_ANSWER_RECHECK\n  || state.step === nextStepsSteps.CORRECT_ANSWER_START_TREATMENT) { \n    setCookie(tasks.DUDLEY_GRADE_HEART_MURMUR,true,\"/\")\n}  \n\n  // =================== GET PAGES DATA ==================\n\n  const resourcesAr = get(data, 'allNodeQuestion.nodes')\n  const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n\n  let resources = null\n        \n  switch (state.step) {\n      case nextStepsSteps.QUESTION_POSED:\n        resources = getSlideData(resourcesAr,nextStepsSlugNames.QUESTION_POSED)\n        break\n      case nextStepsSteps.CORRECT_ANSWER_RECHECK:\n        resources = getSlideData(resourcesAnswersAr,nextStepsSlugNames.CORRECT_ANSWER_RECHECK)\n      case nextStepsSteps.CORRECT_ANSWER_START_TREATMENT:\n        resources = getSlideData(resourcesAnswersAr,nextStepsSlugNames.CORRECT_ANSWER_START_TREATMENT)\n        break\n      case nextStepsSteps.INCORRECT_ALL_CLEAR:\n        resources = getSlideData(resourcesAnswersAr,nextStepsSlugNames.INCORRECT_ALL_CLEAR)\n        break\n    default:\n      return \"no current slide\"\n  }\n  console.log(\"=========== current Step - step \",state.step)\n  console.log(resources)\n  if (!resources) return \"resources not found\"\n  if (resources == \"NO_DATA_FOUND\") return \"resources not found\"\n\n  // =================== NAVIGATION  ==================\n\n  const setCurrentStep = (step) => {   \n    console.log(\"=========== setCurrentStep - step \",step)\n    setState({...state, step: step})\n  }\n\n  const tryAgain = (e) => {\n    setState({...state, step: nextStepsSteps.QUESTION_POSED})\n  }\n\n  const answerSelected = (e) => {\n    if (e.currentTarget.id) {\n      switch (e.currentTarget.id) {\n          case (nextStepsSteps.CORRECT_ANSWER_RECHECK):\n                setCurrentStep(nextStepsSteps.CORRECT_ANSWER_RECHECK)\n          break\n          case (nextStepsSteps.CORRECT_ANSWER_START_TREATMENT):\n                setCurrentStep(nextStepsSteps.CORRECT_ANSWER_START_TREATMENT)\n          break\n          case (nextStepsSteps.CORRECT_ANSWER_XRAY_ONLY):\n                setCurrentStep(nextStepsSteps.INCORRECT_ALL_CLEAR)\n          break\n          default:\n              console.log(\"no matching id on question button\")\n              setCurrentStep(nextStepsSteps.QUESTION_POSED)\n      }\n    } else {\n      console.log(\"no id on question button\")\n      setCurrentStep(nextStepsSteps.QUESTION_POSED)\n    }\n    \n  }\n\n  const handleLeftClick = (e) => {\n      console.log(\"handleLeftClick\")\n  }\n\n  const handleRightClick = (e) => {\n      console.log(\"handleRightClick\")\n  }\n\n  return (\n    <Layout headerText={replaceDogName(\"Poppy has a grade 3 mitral valve murmur; how would you like to proceed?\"),dogChoice} showPercentIndicator={true}>\n\n     {((nextStepsSteps.CORRECT_ANSWER_RECHECK === state.step \n     || nextStepsSteps.CORRECT_ANSWER_START_TREATMENT === state.step)) ?\n      <BottomNavigationLink to={\"/which-treatment/\"}\n                  distanceFromSide={\"2%\"}\n                  bottom={\"2%\"}\n                  direction={bottomNavigationLinkDirection.FORWARD}\n                  linkText={\"Continue\"}\n      /> : '' }\n\n      <div className={(useStyles()).root} style={{position: 'relative', zIndex:'1 !important'}}>\n\n           { (nextStepsSteps.QUESTION_POSED  === state.step) ? \n           <NextStepsQuestionResponseLayout type={slideTypes.QUESTION_POSED} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={answerSelected} /> : '' }\n           \n           { (nextStepsSteps.CORRECT_ANSWER_RECHECK === state.step) ? \n           <NextStepsQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           { (nextStepsSteps.CORRECT_ANSWER_START_TREATMENT === state.step) ? \n           <NextStepsQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n          \n           { (nextStepsSteps.INCORRECT_ALL_CLEAR === state.step) ? \n           <NextStepsQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n       \n      </div>\n  </Layout>\n\n)}\n\nconst NextStepsQuestionResponseLayout = ({type = slideTypes.QUESTION_POSED, resources, navigationLeftHandler, navigationRightHandler, dogChoice }) => {\n  //debugger\n  let buttonLinks = []\n  if (resources.field_buttonlinks && resources.field_buttonlinks.length > 0) {\n     // this get over ridden\n     buttonLinks = resources.field_buttonlinks\n  }\n\n  let currentCaseStudySlideData = {}\n  switch (type) {\n      case slideTypes.ANSWER_WITH_VIDEO:\n      case slideTypes.ANSWER_NO_VIDEO:\n\n                const isCorrectAnswer = resources.field_iscorrectanswer[0] === \"yes\" ? true : false\n\n                buttonLinks = [{}]\n\n                if (isCorrectAnswer === false) {\n\n                    buttonLinks[0].id = nextStepsSteps.QUESTION_POSED\n                    buttonLinks[0].title = \"Try again\"\n                    buttonLinks[0].url = \"/\"\n                    buttonLinks[0].onClickHandler = navigationRightHandler\n                    buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n                }\n\n                //debugger\n\n                // =========== NORMALISE DRUPAL DATA ========\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: isCorrectAnswer,\n                    isCorrectAnswer: resources.field_iscorrectanswer[0],\n                    answerHeader: replaceDogName(removeParagraphsTags(resources.field_answerheader ? resources.field_answerheader : '', dogChoice)),\n                    answerText: replaceDogName(removeParagraphsTags(resources.field_answertext ? resources.field_answertext.processed : '', dogChoice)), \n                    additionalText: replaceDogName(removeParagraphsTags(resources.field_additionalbodytext ? resources.field_additionalbodytext.processed : '', dogChoice)), \n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks,\n                }\n           break\n      case slideTypes.QUESTION_POSED:\n                // =========== NORMALISE DRUPAL DATA ========\n\n                buttonLinks = [{},{},{},{},{},{}]\n\n                buttonLinks[0].id = nextStepsSteps.CORRECT_ANSWER_RECHECK\n                buttonLinks[0].title = \"Recheck in 6–12 months\"\n                buttonLinks[0].url = \"/\"\n\n                buttonLinks[1].id = nextStepsSteps.INCORRECT_ALL_CLEAR\n                buttonLinks[1].title = \"Give the ‘all clear’\"\n                buttonLinks[1].url = \"/\"\n\n                buttonLinks[2].id = nextStepsSteps.CORRECT_ANSWER_START_TREATMENT\n                buttonLinks[2].title = \"Start treatment\"\n                buttonLinks[2].url = \"/\"\n\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: false,\n                    questionText: resources.field_questiontext,\n                    headerText: resources.field_questiontext,\n                    additionalText: resources.field_additionalbodytext,\n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks\n                }\n          break\n    default:\n         return \"type not found\"\n  }\n\n  const ref = React.createRef();\n\n  return (\n    <section>\n   \n    <Grid container  \n    spacing={0} \n    spacing={0} \n    justify=\"center\" \n    style={{border: '0px solid black'}}>\n   \n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n      <Grid item xs={12} sm={5}  align=\"center\" style={{border: '0px solid red'}}>\n       \n          <FixedSIzeVideo autoPlay=\"true\" ref={ref} currentCaseStudySlideData={currentCaseStudySlideData} /> \n       \n      </Grid>\n\n      <Grid item xs={12} sm={5}  align=\"left\" style={{ border: '0px solid red' }}>\n        {(type === slideTypes.QUESTION_POSED) ?\n          <QuestionPosed currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationRightHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> : ''\n        }\n\n        {(type === slideTypes.ANSWER_WITH_VIDEO || type === slideTypes.ANSWER_NO_VIDEO) ?\n          <QuestionResponse currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationLeftHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> :''\n        }\n            \n      </Grid>\n\n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n    </Grid>\n    </section>\n  )\n}\n\nexport default NextSteps\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optioniscorrect5\n        field_optioniscorrect6\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsbodytext5 {\n          processed\n        }\n        field_optionsbodytext6 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_answerheader\n        field_answertext {\n          processed\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_iscorrectanswer\n        field_progresspercent\n        field_slugname\n        field_topheadertext {\n          processed\n        }\n        field_videocaptiontext1 {\n          processed\n        }\n        field_videoduration1\n        field_videonarrator1\n        field_videotext1 {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n  }\n  `\n\n\n\n"],"sourceRoot":""}