{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","data","useCookies","setCookie","useState","renderUserChoice","renderLoader","renderCookieBanner","state","setState","resources","get","console","log","resourcesUserChoicePage","unmountMe","navigate","path","pageQuery"],"mappings":"4FAAA,4PAsBe,SAASA,EAAT,GAA2B,IAAPC,EAAM,EAANA,KAAM,EACIC,YAAW,CAAC,gBAAgB,aAAa,eAApEC,GADuB,mBAKbC,mBADJ,CAAEC,kBAAkB,EAAMC,cAAc,EAAOC,oBAAoB,KAClFC,EALgC,KAKzBC,EALyB,KAoBnCC,EAAYC,IAAIV,EAAM,gBAC1BW,QAAQC,IAAI,YAAaH,GACzB,IAAII,EAA0BH,IAAIV,EAAM,kBAGxC,OAFAW,QAAQC,IAAIC,GAGZ,YAAC,IAAD,KACKN,EAAMH,iBAAoB,YAAC,IAAD,CAAYU,UApBX,WAC5BN,EAAS,CAAEJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,KAmBFG,UAAWI,IAA8BE,mBAAS,eAC5HR,EAAMF,aAAe,YAAC,IAAD,CAAQS,UAjBN,WACxBN,EAAS,CAAEJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,OAgBV,GAClEC,EAAMD,mBAAqB,YAAC,IAAD,CAAcQ,UAdZ,WAC9BZ,EAAU,iBAAiB,EAAM,CAAEc,KAAM,MACzCR,EAAS,CAACJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,OAYS,IAKpF,IAAMW,EAAS","file":"component---src-pages-index-js-9054f9572a041bebbf56.js","sourcesContent":["// These must be the first lines in src/index.js\n// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable'\n\nimport React, {useState} from 'react'\nimport Layout from '../components/layout'\nimport { navigate } from \"gatsby\"\nimport Grid from '@material-ui/core/Grid';\n\nimport OrangeRoundedButtonWithBLCorner from '../components/OrangeRoundedButtonWithBLCorner'\n\nimport BlockTextReveal from '../components/BlockTextReveal';\nimport CustomFluidImage from '../components/CustomFluidImage';\nimport SideDrawer from '../components/SideDrawer';\nimport Loader from '../components/Loader'\nimport CookieBanner from '../components/CookieBanner';\nimport UserChoice from '../components/UserChoice';\nimport { useCookies } from 'react-cookie'\n\nimport get from 'lodash/get'\nimport { graphql } from \"gatsby\"\n\nexport default function IndexPage({data}){\n  const [cookies, setCookie, removeCookie] = useCookies(['hasConsentSet','userChoice','userChoice']);\n  // const [cookieUserChoice, setCookieUserChoice, removeCookieUserChoice] = useCookies(['userChoice']);\n  // const [cookieLoader, setCookieLoader, removeCookieLoader] = useCookies(['showLoader']);\n  let stateFromCookie = { renderUserChoice: true, renderLoader: false, renderCookieBanner: false }\n  const [state, setState] = useState(stateFromCookie)\n\n  const handleUserChoiceUnmount = () =>  {\n      setState({ renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  const handleLoaderUnmount = () =>  {\n      setState({ renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  const handleCookieBannerUnmount = () =>  {\n      setCookie('hasConsentSet', true, { path: '/' });\n      setState({renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  let resources = get(data, 'nodeHomepage')\n  console.log('resources', resources)\n  let resourcesUserChoicePage = get(data, 'nodeUserchoice') \n  console.log(resourcesUserChoicePage)\n \n  return (\n  <Layout>\n      {state.renderUserChoice ?  <UserChoice unmountMe={handleUserChoiceUnmount} resources={resourcesUserChoicePage} /> : navigate(\"/home-page/\")}\n      {state.renderLoader ? <Loader unmountMe={handleLoaderUnmount} /> : ''}\n      {state.renderCookieBanner ? <CookieBanner unmountMe={handleCookieBannerUnmount} /> : ''}\n  </Layout>\n    )\n}\n\nexport const pageQuery = graphql`{\n    nodeUserchoice {\n          drupal_id\n          changed\n          field_buttonlinks {\n              uri\n              title\n          }\n          field_checkboxtext1\n          field_checkboxtext2\n          field_headertext\n          field_jobnumber\n          path {\n              alias\n          }\n          \n    }\n    nodeHomepage {\n          path {\n            alias\n          }\n          drupal_id\n          field_headertextline3\n          field_headertextline2\n          field_headertextline1\n          field_bottombodytext {\n            processed\n          }\n          field_bottomtitle {\n            processed\n          }\n          field_buttonlinks {\n            title\n            uri\n          }\n          field_toprighttext {\n            processed\n          }\n          changed(fromNow: false)\n    }\n  }`\n\n\n"],"sourceRoot":""}