{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/contact.js","webpack:///./src/components/layoutScrollable.js","webpack:///./src/utils/displayUtils.js"],"names":["Layout","children","theme","palette","background","lightBlue","className","StyledTypography","styled","Typography","gridStyle","border","PhoneNumber","textLabel","style","width","marginBottom","variant","EmailAddress","Contact","render","resources","get","this","console","log","container","spacing","justify","item","xs","sm","height","field_headertext","removeParagraphsTags","field_bodytext","processed","field_contactboxheader1","field_contactboxbody1","field_contactphonenumber1","field_contactemail1","field_contactboxheader2","field_contactboxbody2","field_contactphonenumber2","field_contactemail2","React","Component","pageQuery","LayoutScrollable","layoutScrollableStyle","backgroundColor","minWidth","processHtml","htmlText","htmlTextProccesed","replace","processInternalLink"],"mappings":"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","file":"component---src-pages-contact-js-851172be41e138ddc7f1.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n//import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport React, { useLayoutEffect, useState } from 'react'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled, { css, keyframes } from 'styled-components'\nimport theme, { sm, md, lg, xl } from '../theme'\n\n// function useWindowSize() {\n//   const [size, setSize] = useState([0, 0])\n//   useLayoutEffect(() => {\n//     function updateSize() {\n//       setSize([window.innerWidth, window.innerHeight])\n//     }\n//     window.addEventListener('resize', updateSize)\n//     updateSize();\n//     return () => window.removeEventListener('resize', updateSize)\n//   }, [])\n//   return size\n// }\n\n// function ShowWindowDimensions(props) {\n//   const [width, height] = useWindowSize();\n//   return <span>Window size: {width} x {height}</span>;\n// }\n\nconst Layout = ({ children }) => {\n // const [width, height] = useWindowSize();\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const layoutStyle = { backgroundColor:theme.palette.background.lightBlue,\n     minWidth:'100%',\n     height:'100vh',\n     minHeight:'100vh',\n     border: '0px solid yellow',\n     overflow:'hidden'\n  }\n   \n  //TODO: - figure out what to do here - can't use at top level without breaking lower level styled comp \n  // const AllLayout = styled.div`\n      // minWidth:100%;\n      // height:100vh;\n      // minHeight:100vh;\n      // border: 0px solid yellow;\n      // overflow:hidden;\n  //     @media (max-width: ${sm}px) {\n  //       overflow:auto;\n  //       height:auto;\n  //     }\n  // `\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <CookiesProvider>\n      <div className=\"pageContainer\">\n\n        <main>{children}</main>\n      \n      </div>\n      </CookiesProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport get from 'lodash/get'\nimport LayoutScrollable from '../components/layoutScrollable'\nimport Layout from '../components/layout'\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby' \nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider, Typography } from '@material-ui/core';\nimport theme from '../theme'\nimport styled from 'styled-components'\nimport SlideDrawer from '../components/SideDrawer'\nimport Grid from '@material-ui/core/Grid'\nimport { processInternalLink, processHtml, removeParagraphsTags } from '../utils/displayUtils'\n\n// const StyledButton = styled(Button)`\n//   background-color: #6772e5;\n//   &:hover {\n//     background-color: #5469d4;\n//   }\n// `;\n\nconst StyledTypography = styled(Typography)`\n    margin-bottom: 3rem;\n`;\n\nconst gridStyle = {border: '0px solid red'}\n\nconst PhoneNumber = ({textLabel}) => {\n    return (<div style={{width: '100%',marginBottom:'2rem' }}><Typography variant=\"caption\">{textLabel}</Typography></div>)\n}\nconst EmailAddress = ({textLabel}) => {\n    return (<div style={{width: '100%',marginBottom:'2rem' }}><Typography variant=\"caption\">{textLabel}</Typography></div>)\n}\n\nclass Contact extends React.Component {\n  render() {\n    const resourcesAr = get(this, 'props.data.allNodeContact.nodes')\n    const resources = resourcesAr[0]\n    console.log(resources)\n    //console.log(resources.allResourcesJson)\n\n    return (\n        <Layout>\n          \n          <SlideDrawer />\n\n          <Grid container  \n              spacing={0} \n              spacing={0} \n              justify=\"flex-start\" \n              style={gridStyle}>\n              <Grid item xs={12} sm={12} style={gridStyle}>\n                 <div style={{height: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                 <div style={{width: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={8} style={gridStyle}>\n                  <ThemeProvider theme={theme}>\n                        <StyledTypography variant=\"h1\">{resources.field_headertext}</StyledTypography>\n                        <StyledTypography variant=\"body1\">{removeParagraphsTags(resources.field_bodytext.processed)}</StyledTypography> \n                   </ThemeProvider>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                 <div style={{width: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                  <div style={{width: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={8}  style={gridStyle}>\n                  <ThemeProvider theme={theme}>\n                      <div>\n                        <StyledTypography variant=\"h5\">{removeParagraphsTags(resources.field_contactboxheader1)}</StyledTypography>\n                        <StyledTypography variant=\"body1\">{removeParagraphsTags(resources.field_contactboxbody1)}</StyledTypography>\n                        <PhoneNumber textLabel={resources.field_contactphonenumber1} />\n                        <EmailAddress textLabel={resources.field_contactemail1} />\n                      </div>\n                      <div>\n                        <StyledTypography variant=\"h5\">{removeParagraphsTags(resources.field_contactboxheader2)}</StyledTypography>\n                        <StyledTypography variant=\"body1\">{removeParagraphsTags(resources.field_contactboxbody2)}</StyledTypography>\n                        <PhoneNumber textLabel={resources.field_contactphonenumber2} />\n                        <EmailAddress textLabel={resources.field_contactemail2} />\n                      </div>\n                   </ThemeProvider>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                  <div style={{width: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={12}  style={gridStyle}>\n                  <div style={{height: '100px'}}></div>\n              </Grid>\n          </Grid>\n        </Layout>\n    )\n  }\n}\n\nexport default Contact\n\nexport const pageQuery = graphql`{\n    allNodeContact {\n    nodes {\n      drupal_id\n      field_additionalbodytext {\n        processed\n      }\n      field_bodytext {\n        processed\n      }\n      field_contactboxheader1\n      field_contactboxheader2\n      field_contactboxbody1\n      field_contactboxbody2\n      field_contactemail1\n      field_contactemail2\n      field_contactphonenumber1\n      field_contactphonenumber2\n      field_headertext\n      path {\n        alias\n      }\n    }\n  }\n}`","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n//import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport React, { useLayoutEffect, useState } from 'react'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport theme from \"../theme\"\n\nconst LayoutScrollable = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitle2Query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const layoutScrollableStyle = { backgroundColor:theme.palette.background.lightBlue, minWidth:'100%' }\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <CookiesProvider>\n      <div style={layoutScrollableStyle}>\n        <main>{children}</main>\n      </div>\n      </CookiesProvider>\n    </>\n  )\n}\n\nLayoutScrollable.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default LayoutScrollable\n","export const processHtml = (htmlText) => {\n    let htmlTextProccesed = htmlText.replace(/<p>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/p>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<em>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/em>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<strong>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/strong>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<i>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/i/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<b>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/b>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<span>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/span>/g,'')\n    return htmlTextProccesed\n}\n\nexport const removeParagraphsTags = (htmlText) => {\n    \n    let htmlTextProccesed = htmlText.replace(/<p>/g,'')\n    htmlTextProccesed = htmlTextProccesed.replace(/<\\/p>/g,'')\n    return htmlTextProccesed\n}\n\nexport const processInternalLink = (htmlText) => {\n    let htmlTextProccesed = htmlText.replace(/internal:/g,'')\n    return htmlTextProccesed\n}\n"],"sourceRoot":""}