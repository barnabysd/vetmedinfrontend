{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","useCookies","setCookie","useState","renderUserChoice","renderLoader","renderCookieBanner","state","setState","unmountMe","navigate","path"],"mappings":"4FAAA,6LAmBe,SAASA,IAAY,IAAD,EACUC,YAAW,CAAC,gBAAgB,aAAa,eAApEC,GADiB,mBAKPC,mBADJ,CAAEC,kBAAkB,EAAMC,cAAc,EAAOC,oBAAoB,KAClFC,EAL0B,KAKnBC,EALmB,KAoBjC,OACA,YAAC,IAAD,KACKD,EAAMH,iBAAmB,YAAC,IAAD,CAAYK,UAfV,WAC5BD,EAAS,CAAEJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,OAcEI,mBAAS,cACvFH,EAAMF,aAAe,YAAC,IAAD,CAAQI,UAZN,WACxBD,EAAS,CAAEJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,OAWV,GAClEC,EAAMD,mBAAqB,YAAC,IAAD,CAAcG,UATZ,WAC9BP,EAAU,iBAAiB,EAAM,CAAES,KAAM,MACzCH,EAAS,CAACJ,kBAAkB,EAAOC,cAAc,EAAOC,oBAAoB,OAOS","file":"component---src-pages-index-js-53613b097cc45d43565d.js","sourcesContent":["// These must be the first lines in src/index.js\n// import 'react-app-polyfill/ie11';\n// import 'react-app-polyfill/stable'\n\nimport React, {useState} from 'react'\nimport Layout from '../components/layout'\nimport { navigate } from \"gatsby\"\nimport Grid from '@material-ui/core/Grid';\n\nimport OrangeRoundedButtonWithBLCorner from '../components/OrangeRoundedButtonWithBLCorner'\n\nimport BlockTextReveal from '../components/BlockTextReveal';\nimport CustomFluidImage from '../components/CustomFluidImage';\nimport SideDrawer from '../components/SideDrawer';\nimport Loader from '../components/Loader'\nimport CookieBanner from '../components/CookieBanner';\nimport UserChoice from '../components/UserChoice';\nimport { useCookies } from 'react-cookie'\n\nexport default function IndexPage(){\n  const [cookies, setCookie, removeCookie] = useCookies(['hasConsentSet','userChoice','userChoice']);\n  // const [cookieUserChoice, setCookieUserChoice, removeCookieUserChoice] = useCookies(['userChoice']);\n  // const [cookieLoader, setCookieLoader, removeCookieLoader] = useCookies(['showLoader']);\n  let stateFromCookie = { renderUserChoice: true, renderLoader: false, renderCookieBanner: false }\n  const [state, setState] = useState(stateFromCookie)\n\n  const handleUserChoiceUnmount = () =>  {\n      setState({ renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  const handleLoaderUnmount = () =>  {\n      setState({ renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  const handleCookieBannerUnmount = () =>  {\n      setCookie('hasConsentSet', true, { path: '/' });\n      setState({renderUserChoice: false, renderLoader: false, renderCookieBanner: false});\n  }\n\n  return (\n  <Layout>\n      {state.renderUserChoice ? <UserChoice unmountMe={handleUserChoiceUnmount} /> : navigate(\"/homePage/\")}\n      {state.renderLoader ? <Loader unmountMe={handleLoaderUnmount} /> : ''}\n      {state.renderCookieBanner ? <CookieBanner unmountMe={handleCookieBannerUnmount} /> : ''}\n  </Layout>\n)\n  }\n\n\n"],"sourceRoot":""}