{"version":3,"sources":["webpack:///./src/pages/heart-murmur-how-to-proceed.js"],"names":["HeartMurmurHowToProceed","data","console","log","useCookies","cookieKeyNames","cookies","setCookie","initialState","step","ownerResponseSteps","QUESTION_POSED","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","id","setCurrentStep","CORRECT_ANSWER","tasks","DUDLEY_DETECT_HEART_MURMUR","getSlideData","ownerResponse_CorrectAnswer","INCORRECT_ANSWER","ownerResponse_InCorrectAnswer","style","display","pageQuery"],"mappings":"8RAkEeA,UAtDiB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC1BC,QAAQC,IAAIF,GADwB,MAEOG,YAAWC,KAA/CC,EAF6B,KAEpBC,EAFoB,KAGhCC,GAHgC,KAGjB,CACfC,KAAMC,IAAmBC,iBAJO,EAOVC,mBAASJ,GAA5BK,EAP6B,KAOtBC,EAPsB,KAQpCZ,QAAQC,IAAI,oBAAoBU,EAAMJ,MACtCP,QAAQC,IAAI,QAASU,GACrB,IACIE,EADEC,EAAYV,EAAO,UAAgBA,EAAO,UAAeW,IAAQC,OAEjEC,EAAcC,IAAInB,EAAM,yBAExBoB,EAAK,oBAGLC,EAAiB,SAACb,GACpBP,QAAQC,IAAI,oCAAoCM,GAEhDK,EAAS,OAAD,wBAAKD,GAAL,IAAYJ,KAAMA,MAO9B,OAJII,EAAMJ,OAASC,IAAmBa,gBAClChB,EAAUiB,IAAMC,4BAA2B,EAAK,KAG5CZ,EAAMJ,MACZ,KAAKC,IAAmBC,eACpBI,EAAYW,YAAaP,EAAY,kBACvC,MACA,KAAKT,IAAmBa,eACtBR,EAAYY,IACd,MACA,KAAKjB,IAAmBkB,iBACtBb,EAAYc,IACd,MACF,QACE,MAAO,kBAKX,OADA3B,QAAQC,IAAIY,GACPA,EAGL,YAAC,IAAD,KACQF,EAAMJ,OAASC,IAAmBC,eAAiB,YAAC,IAAD,CAAiBF,KAAMC,IAAmBC,eAAgBU,GAAIA,EAAIS,MAAO,CAACC,QAAS,QAASf,UAAWA,EAAWM,eAAgBA,EAAiBP,UAAWA,IAAgB,GACjOF,EAAMJ,OAASC,IAAmBa,eAAiB,YAAC,IAAD,CAAiBd,KAAMC,IAAmBa,eAAgBF,GAAIA,EAAIS,MAAO,CAACC,QAAS,QAASf,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,GAChOF,EAAMJ,OAASC,IAAmBkB,iBAAmB,YAAC,IAAD,CAAiBnB,KAAMC,IAAmBkB,iBAAkBP,GAAIA,EAAIS,MAAO,CAACC,QAAS,QAASf,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,IANrN,uBAaxB,IAAMiB,EAAS","file":"component---src-pages-heart-murmur-how-to-proceed-js-61f7ef7b489dbde96f08.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerResponseSteps, cookieKeyNames, tasks } from \"../WebsiteConstants\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport slides, {ownerResponse_CorrectAnswer,ownerResponse_InCorrectAnswer} from \"../api/slideData\"\nimport {replaceDogName, getCssDisplayState, getSlideData, displayDog } from '../utils/displayUtils'\n\nconst HeartMurmurHowToProceed = ({data}) => {\n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies(cookieKeyNames)\n        let initialState = { \n            step: ownerResponseSteps.QUESTION_POSED, \n        }\n      \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        \n        const id = \"ownerResponsePage\"\n        const style = {}\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        if (state.step === ownerResponseSteps.CORRECT_ANSWER) { \n            setCookie(tasks.DUDLEY_DETECT_HEART_MURMUR,true,\"/\")\n        }\n        \n        switch (state.step) {\n          case ownerResponseSteps.QUESTION_POSED:\n              resources = getSlideData(resourcesAr,\"owner-response\")\n            break\n            case ownerResponseSteps.CORRECT_ANSWER:\n              resources = ownerResponse_CorrectAnswer\n            break\n            case ownerResponseSteps.INCORRECT_ANSWER:\n              resources = ownerResponse_InCorrectAnswer\n            break\n          default:\n            return \"no crrent slide\"\n        }\n        \n       \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n        \n    return (\n        <Layout>\n              { state.step === ownerResponseSteps.QUESTION_POSED ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default HeartMurmurHowToProceed\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n\n  }\n  `\n\n"],"sourceRoot":""}