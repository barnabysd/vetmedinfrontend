{"version":3,"sources":["webpack:///./src/pages/owner-treatment-options.js"],"names":["OwnerTreatmentOptions","data","console","log","useCookies","cookieKeyNames","cookies","setCookie","initialState","step","ownerResponseSteps","SECTION_INTRO","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","id","setCurrentStep","CORRECT_ANSWER","tasks","DUDLEY_REASSURING_OWNER","QUESTION_POSED_BY_OWNER","QUESTION_POSED","getSlideData","ownerTreatment_CorrectAnswer","INCORRECT_ANSWER","ownerTreatment_InCorrectAnswer","style","display","pageQuery"],"mappings":"4RA4EeA,UAhEe,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACxBC,QAAQC,IAAIF,GADsB,MAESG,YAAWC,KAA/CC,EAF2B,KAElBC,EAFkB,KAG9BC,GAH8B,KAGf,CACfC,KAAMC,IAAmBC,gBAJK,EAORC,mBAASJ,GAA5BK,EAP2B,KAOpBC,EAPoB,KAQlCZ,QAAQC,IAAI,oBAAoBU,EAAMJ,MACtCP,QAAQC,IAAI,QAASU,GACrB,IACIE,EADEC,EAAYV,EAAO,UAAgBA,EAAO,UAAeW,IAAQC,OAEjEC,EAAcC,IAAInB,EAAM,yBAExBoB,EAAK,oBAGLC,EAAiB,SAACb,GACpBP,QAAQC,IAAI,oCAAoCM,GAEhDK,EAAS,OAAD,wBAAKD,GAAL,IAAYJ,KAAMA,MAO9B,OAJII,EAAMJ,OAASC,IAAmBa,gBAClChB,EAAUiB,IAAMC,yBAAwB,EAAK,KAGzCZ,EAAMJ,MACZ,KAAKC,IAAmBC,cAGxB,KAAKD,IAAmBgB,wBAGxB,KAAKhB,IAAmBiB,eACpBZ,EAAYa,YAAaT,EAAY,2BACvC,MACA,KAAKT,IAAmBa,eAGtBR,EAAYc,IACd,MACA,KAAKnB,IAAmBoB,iBAEtBf,EAAYgB,IACd,MACF,QACE,MAAO,mBAIX,OADA7B,QAAQC,IAAIY,GACPA,EAGL,YAAC,IAAD,KACQF,EAAMJ,OAASC,IAAmBC,cAAgB,YAAC,IAAD,CAAiBF,KAAMC,IAAmBC,cAAeU,GAAIA,EAAIW,MAAO,CAACC,QAAS,QAASjB,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,GAC9NF,EAAMJ,OAASC,IAAmBgB,wBAA0B,YAAC,IAAD,CAAiBjB,KAAMC,IAAmBgB,wBAAyBL,GAAIA,EAAIW,MAAO,CAACC,QAAS,QAASjB,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,GAClPF,EAAMJ,OAASC,IAAmBiB,eAAiB,YAAC,IAAD,CAAiBlB,KAAMC,IAAmBiB,eAAgBN,GAAIA,EAAIW,MAAO,CAACC,QAAS,QAASjB,UAAWA,EAAWM,eAAgBA,EAAiBP,UAAWA,IAAgB,GACjOF,EAAMJ,OAASC,IAAmBa,eAAiB,YAAC,IAAD,CAAiBd,KAAMC,IAAmBa,eAAgBF,GAAIA,EAAIW,MAAO,CAACC,QAAS,QAASjB,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,GAChOF,EAAMJ,OAASC,IAAmBoB,iBAAmB,YAAC,IAAD,CAAiBrB,KAAMC,IAAmBoB,iBAAkBT,GAAIA,EAAIW,MAAO,CAACC,QAAS,QAASjB,UAAWA,EAAWM,eAAgBA,EAAgBP,UAAWA,IAAgB,IARrN,uBAexB,IAAMmB,EAAS","file":"component---src-pages-owner-treatment-options-js-713ac9c2d2183e06ef08.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerResponseSteps, cookieKeyNames, tasks } from \"../WebsiteConstants\"\nimport { processInternalLink, processHtml, removeParagraphsTags, getSlideData } from '../utils/displayUtils'\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport slides, {ownerTreatment_CorrectAnswer,ownerTreatment_InCorrectAnswer} from \"../api/slideData\"\n\nconst OwnerTreatmentOptions = ({data}) => {\n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies(cookieKeyNames)\n        let initialState = { \n            step: ownerResponseSteps.SECTION_INTRO, \n        }\n    \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        \n        const id = \"ownerResponsePage\"\n        const style = {}\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        if (state.step === ownerResponseSteps.CORRECT_ANSWER) { \n            setCookie(tasks.DUDLEY_REASSURING_OWNER,true,\"/\")\n        }\n        \n        switch (state.step) {\n          case ownerResponseSteps.SECTION_INTRO:\n              resources = getSlideData(resourcesAr,\"owner-treatment-options\")\n            break\n          case ownerResponseSteps.QUESTION_POSED_BY_OWNER:\n              resources = getSlideData(resourcesAr,\"owner-treatment-options\")\n            break\n          case ownerResponseSteps.QUESTION_POSED:\n              resources = getSlideData(resourcesAr,\"owner-treatment-options\")\n            break\n            case ownerResponseSteps.CORRECT_ANSWER:\n                //TODO - dynamic\n              //resources = getSlideData(resourcesAr,\"/owner-treatment-answer-concise-language\")\n              resources = ownerTreatment_CorrectAnswer\n            break\n            case ownerResponseSteps.INCORRECT_ANSWER:\n              //resources = getSlideData(resourcesAr,\"/owner-treatment-answer-incorrect\")\n              resources = ownerTreatment_InCorrectAnswer\n            break\n          default:\n            return \"no current slide\"\n        }\n        \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n        \n    return (\n        <Layout>\n              { state.step === ownerResponseSteps.SECTION_INTRO ? <QuestionResPage step={ownerResponseSteps.SECTION_INTRO} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.QUESTION_POSED_BY_OWNER ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED_BY_OWNER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.QUESTION_POSED ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default OwnerTreatmentOptions\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n\n  }\n  `\n\n"],"sourceRoot":""}