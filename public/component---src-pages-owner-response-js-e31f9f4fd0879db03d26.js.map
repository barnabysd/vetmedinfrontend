{"version":3,"sources":["webpack:///./src/pages/owner-response.js"],"names":["OwnerResponse","data","console","log","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","initialState","step","ownerResponseSteps","QUESTION_POSED_BY_OWNER","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","resourcesIntroAr","resourcesAnswersAr","id","setCurrentStep","getSlideData","ownerResponseSlugNames","QUESTION_POSED_BY_OWNER_DUDLEY","POPPY","QUESTION_POSED_BY_OWNER_POPPY","REGGIE","QUESTION_POSED_BY_OWNER_REGGIE","animationVideoName","getOwnerVideo","QUESTION_POSED","QUESTION_POSED_DUDLEY","QUESTION_POSED_POPPY","QUESTION_POSED_REGGIE","correctAnswerStep","CORRECT_ANSWER","incorrectAnswerStep","INCORRECT_ANSWER","videoCorrectAnswer","getVideoData","ownerResponse_CorrectAnswer","answerHeader","field_answerheader","processField","answerText","field_answertext","additionalText","field_additionalbodytext","isCorrectAnswer","field_iscorrectanswer","mainImage","getDogImageName","animationCharacterState","HAPPY","slugName","continueLink","uri","title","url","backLink","accessibilityVideoText","buttonLinks","updateSlideDataWithVideoData","videoIncorrectAnswer","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","ownerResponse_InCorrectAnswer","SAD","useEffect","newCaseStudyProgress","setCaseStudyProgress","tasks","RESPONDING_OWNER_INITIAL_QUESTION","path","style","display","e","pageQuery"],"mappings":"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","file":"component---src-pages-owner-response-js-e31f9f4fd0879db03d26.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerResponseSteps, cookieKeyNames, tasks, ownerResponseSlugNames, animationCharacterState, legacyButtonTypes } from \"../WebsiteConstants\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport slides, {ownerResponse_CorrectAnswer,ownerResponse_InCorrectAnswer} from \"../api/slideData\"\nimport { getSlideData, processField } from \"../utils/displayUtils\"\nimport { setCaseStudyProgress, getVideoData, updateSlideDataWithVideoData } from \"../utils/dataUtils\"\nimport { getDogImageName, getOwnerVideo } from \"../utils/assetUtils\"\n\nconst OwnerResponse = ({data}) => {\n  \n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n        let initialState = { \n            step: ownerResponseSteps.QUESTION_POSED_BY_OWNER, \n        }\n      \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n\n         // =================== CONSTANTS ======================\n\n        const buttonIds = {\n          INCORRECT_ANSWER: \"ownerresponseincorrect1\",\n          QUESTION_POSED: \"ownerresponsequestionposed1\"\n      }\n\n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        const resourcesIntroAr = get(data, 'allNodeOwnerquestion.nodes')\n        const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n        \n        \n        const id = \"ownerResponsePage\"\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        const tryAgain = (e) => {\n            setCurrentStep(ownerResponseSteps.QUESTION_POSED)\n        }\n        //\n        \n        switch (state.step) {\n          case ownerResponseSteps.QUESTION_POSED_BY_OWNER:\n              if (dogChoice === dogName.DUDLEY) resources = getSlideData(resourcesIntroAr, ownerResponseSlugNames.QUESTION_POSED_BY_OWNER_DUDLEY)\n              if (dogChoice === dogName.POPPY) resources = getSlideData(resourcesIntroAr, ownerResponseSlugNames.QUESTION_POSED_BY_OWNER_POPPY)\n              if (dogChoice === dogName.REGGIE) resources = getSlideData(resourcesIntroAr, ownerResponseSlugNames.QUESTION_POSED_BY_OWNER_REGGIE)\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              \n              \n            break\n            case ownerResponseSteps.QUESTION_POSED:\n              if (dogChoice === dogName.DUDLEY) resources = getSlideData(resourcesAr, ownerResponseSlugNames.QUESTION_POSED_DUDLEY)\n              if (dogChoice === dogName.POPPY) resources = getSlideData(resourcesAr, ownerResponseSlugNames.QUESTION_POSED_POPPY)\n              if (dogChoice === dogName.REGGIE) resources = getSlideData(resourcesAr, ownerResponseSlugNames.QUESTION_POSED_REGGIE)\n              resources.correctAnswerStep = ownerResponseSteps.CORRECT_ANSWER\n              resources.incorrectAnswerStep = ownerResponseSteps.INCORRECT_ANSWER\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              console.log(resources)\n            break\n            case ownerResponseSteps.CORRECT_ANSWER:\n             \n              resources = getSlideData(resourcesAnswersAr, ownerResponseSlugNames.CORRECT_ANSWER)\n\n              let videoCorrectAnswer = getVideoData(resources,dogChoice)\n\n              let ownerResponse_CorrectAnswer = {\n  \n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.HAPPY,dogChoice),\n                  slugName: ownerResponseSlugNames.CORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/xray'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: [],\n                  dogChoice:dogChoice\n              }\n        \n              resources = updateSlideDataWithVideoData(ownerResponse_CorrectAnswer,videoCorrectAnswer) \n              console.log(resources)\n            break\n            case ownerResponseSteps.INCORRECT_ANSWER:\n             \n              resources = getSlideData(resourcesAnswersAr, ownerResponseSlugNames.INCORRECT_ANSWER)\n\n              let videoIncorrectAnswer = getVideoData(resources,dogChoice)\n\n              const buttonLinks = [{}]\n\n              buttonLinks[0].id = buttonIds.QUESTION_POSED\n              buttonLinks[0].title = \"Try again\"\n              buttonLinks[0].url = \"/\"\n              buttonLinks[0].onClickHandler = () => { setCurrentStep(ownerResponseSteps.QUESTION_POSED) }\n              buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n              let ownerResponse_InCorrectAnswer = {\n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.SAD,dogChoice),\n                  slugName: ownerResponseSlugNames.INCORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: buttonLinks,\n                  dogChoice: dogChoice,\n              }\n\n              resources = updateSlideDataWithVideoData(ownerResponse_InCorrectAnswer,videoIncorrectAnswer)  \n              console.log(resources)\n            break\n          default:\n            return \"no current slide\"\n        }\n      \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n\n        // ================ set completed if is\n        \n        useEffect(() => {\n            if (state.step === ownerResponseSteps.CORRECT_ANSWER) {  \n                const newCaseStudyProgress = setCaseStudyProgress(tasks.RESPONDING_OWNER_INITIAL_QUESTION,dogChoice,cookies)\n                console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n                setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,{ path: '/' })  \n            }\n        },[state.step])\n        \n    return (\n        <Layout>\n              { state.step === ownerResponseSteps.QUESTION_POSED_BY_OWNER ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED_BY_OWNER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.QUESTION_POSED ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={tryAgain} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default OwnerResponse\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n    allNodeOwnerquestion {\n    nodes {\n      field_headertext\n      field_additionalbodytext {\n        processed\n      }\n      path {\n        alias\n      }\n    }\n    }\n    allNodeAnswer {\n    nodes {\n      drupal_id\n      created(fromNow: false)\n      field_accessibilityvideotext\n      field_additionalbodytext {\n        processed\n      }\n      field_animationvideoname\n      field_answerheader\n      field_answertext {\n        processed\n      }\n      field_buttonlinks {\n        title\n        uri\n      }\n      field_continuelink {\n        title\n        uri\n      }\n      field_iscorrectanswer\n      field_progresspercent\n      field_slugname\n      field_topheadertext {\n        processed\n      }\n      field_videocaptiontext1 {\n        processed\n      }\n      field_videoduration1\n      field_videonarrator1\n      field_videoposterimage1 {\n        width\n        alt\n        height\n        title\n      }\n      field_videothumbnail1 {\n        alt\n        height\n        title\n        width\n      }\n      path {\n        alias\n      }\n      field_videocaptiontext2 {\n        processed\n      }\n      field_videocaptiontext3 {\n        processed\n      }\n      field_videofordog1\n      field_videofordog2\n      field_videofordog3\n      field_videonarrator2\n      field_videonarrator3\n      field_videoposterimage2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videoposterimage3 {\n        alt\n        height\n        title\n        width\n      }\n      field_videothumbnail2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videotitle1 {\n        processed\n      }\n      field_videotitle2 {\n        processed\n      }\n      field_videotitle3 {\n        processed\n      }\n      relationships {\n        field_video1 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n                internal {\n                  content\n                  description\n                  ignoreType\n                  mediaType\n                }\n              }\n              filesize\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n        field_video2 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n        field_videoposterimage1 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage2 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage3 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail1 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail2 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail3 {\n          localFile {\n            url\n          }\n        }\n        field_video3 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n      }\n      field_videonarratorlocation1 {\n        processed\n      }\n      field_videonarratorlocation2 {\n        processed\n      }\n      field_videonarratorlocation3 {\n        processed\n      }\n      field_videonarratorprofession1 {\n        processed\n      }\n      field_videonarratorprofession2 {\n        processed\n      }\n      field_videonarratorprofession3 {\n        processed\n      }\n      field_videoduration3\n      field_videoduration2\n      field_videothumbnail3 {\n        alt\n        height\n        title\n        width\n      }\n    }\n  }\n\n  }\n  `\n\n"],"sourceRoot":""}