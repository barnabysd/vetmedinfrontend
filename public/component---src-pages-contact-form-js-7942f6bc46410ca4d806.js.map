{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/contactForm.js","webpack:///./src/components/seo.js"],"names":["Layout","children","theme","palette","background","lightBlue","className","Contact","React","useState","state","setState","handleChange","e","target","name","value","title","to","method","action","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","data","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","type","hidden","onChange","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"2LAyFeA,IApDA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAGN,OAU4BC,IAAMC,QAAQC,WAAWC,UAqB/D,OACE,8BAEE,YAAC,IAAD,KACA,mBAAKC,UAAU,iBAEb,wBAAOL,Q,geCpDA,SAASM,IAAW,IAAD,EACNC,IAAMC,SAAS,IAAlCC,EADyB,KAClBC,EADkB,KAG1BC,EAAe,SAACC,GAAO,IAAD,EAC1BF,EAAS,OAAD,wBAAMD,GAAN,WAAcG,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,MAAvC,MAkBV,OACE,YAAC,IAAD,KACG,YAAC,IAAD,CAAKC,MAAM,UACV,iCACA,YAAC,OAAD,CAAMC,GAAG,KAAT,gBACF,oBACEH,KAAK,UACLI,OAAO,OACPC,OAAO,WACPC,eAAa,OACbC,wBAAsB,YACtBC,SA1Be,SAACV,GACpBA,EAAEW,iBACF,IAfYC,EAeNC,EAAOb,EAAEC,OACfa,MAAM,IAAK,CACTR,OAAQ,OACRS,QAAS,CAAE,eAAgB,qCAC3BC,MAnBUJ,EAmBG,OAAD,QACV,YAAaC,EAAKI,aAAa,SAC5BpB,GApBFqB,OAAOC,KAAKP,GAChBQ,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBV,EAAKS,OACrEE,KAAK,QAqBHC,MAAK,kBAAMC,mBAASZ,EAAKI,aAAa,cACtCS,OAAM,SAACC,GAAD,OAAWC,MAAMD,QAiBtB,qBAAOE,KAAK,SAAS3B,KAAK,YAAYC,MAAM,YAC5C,iBAAG2B,QAAM,GACP,iDACuB,qBAAO5B,KAAK,YAAY6B,SAAUhC,MAG3D,qBACE,sCAEE,uBACA,qBAAO8B,KAAK,OAAO3B,KAAK,OAAO6B,SAAUhC,MAG7C,qBACE,uCAEE,uBACA,qBAAO8B,KAAK,QAAQ3B,KAAK,QAAQ6B,SAAUhC,MAG/C,qBACE,oCAEE,uBACA,wBAAUG,KAAK,UAAU6B,SAAUhC,MAGvC,qBACE,sBAAQ8B,KAAK,UAAb,a,sFC7EV,SAASG,EAAT,GAAkD,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAM/B,EAAS,EAATA,MAC9BgC,EADuC,OACvCA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,YAAC,IAAD,CACEM,eAAgB,CACdL,QAEF9B,MAAOA,EACPoC,cAAa,QAAUJ,EAAKE,aAAalC,MACzC+B,KAAM,CACJ,CACEjC,KAAK,cACLuC,QAASJ,GAEX,CACEK,SAAS,WACTD,QAASrC,GAEX,CACEsC,SAAS,iBACTD,QAASJ,GAEX,CACEK,SAAS,UACTD,QAAQ,WAEV,CACEvC,KAAK,eACLuC,QAAQ,WAEV,CACEvC,KAAK,kBACLuC,QAASL,EAAKE,aAAaK,QAE7B,CACEzC,KAAK,gBACLuC,QAASrC,GAEX,CACEF,KAAK,sBACLuC,QAASJ,IAEXO,OAAOT,KAKfH,EAAIa,aAAe,CACjBX,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD","file":"component---src-pages-contact-form-js-7942f6bc46410ca4d806.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n//import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport React, { useLayoutEffect, useState } from 'react'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled, { css, keyframes } from 'styled-components'\nimport theme, { sm, md, lg, xl } from '../theme'\n\n// function useWindowSize() {\n//   const [size, setSize] = useState([0, 0])\n//   useLayoutEffect(() => {\n//     function updateSize() {\n//       setSize([window.innerWidth, window.innerHeight])\n//     }\n//     window.addEventListener('resize', updateSize)\n//     updateSize();\n//     return () => window.removeEventListener('resize', updateSize)\n//   }, [])\n//   return size\n// }\n\n// function ShowWindowDimensions(props) {\n//   const [width, height] = useWindowSize();\n//   return <span>Window size: {width} x {height}</span>;\n// }\n\nconst Layout = ({ children }) => {\n // const [width, height] = useWindowSize();\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const layoutStyle = { backgroundColor:theme.palette.background.lightBlue,\n     minWidth:'100%',\n     height:'100vh',\n     minHeight:'100vh',\n     border: '0px solid yellow',\n     overflow:'hidden'\n  }\n   \n  //TODO: - figure out what to do here - can't use at top level without breaking lower level styled comp \n  // const AllLayout = styled.div`\n      // minWidth:100%;\n      // height:100vh;\n      // minHeight:100vh;\n      // border: 0px solid yellow;\n      // overflow:hidden;\n  //     @media (max-width: ${sm}px) {\n  //       overflow:auto;\n  //       height:auto;\n  //     }\n  // `\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <CookiesProvider>\n      <div className=\"pageContainer\">\n\n        <main>{children}</main>\n      \n      </div>\n      </CookiesProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","// import React from \"react\"\nimport { Link } from \"gatsby\"\n\n// import Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// const Contact = () => (\n//     <Layout>\n//         <SEO title=\"About\" />\n//         <h1>Contact</h1>\n//         <Link to=\"/\">Back to home</Link>\n//     </Layout>\n// )\n\n// export default Contact;\nimport React from 'react'\nimport { navigate } from 'gatsby-link'\nimport Layout from '../components/layout'\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nexport default function Contact() {\n  const [state, setState] = React.useState({})\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch((error) => alert(error))\n  }\n\n  return (\n    <Layout>\n       <SEO title=\"About\" />\n        <h1>Contact</h1>\n        <Link to=\"/\">Back to home</Link>\n      <form\n        name=\"contact\"\n        method=\"post\"\n        action=\"/thanks/\"\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot-field\"\n        onSubmit={handleSubmit}\n      >\n        {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Donâ€™t fill this out: <input name=\"bot-field\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Your name:\n            <br />\n            <input type=\"text\" name=\"name\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Your email:\n            <br />\n            <input type=\"email\" name=\"email\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Message:\n            <br />\n            <textarea name=\"message\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <button type=\"submit\">Send</button>\n        </p>\n      </form>\n    </Layout>\n  )\n}","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}