{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/pages/animateExample.js","webpack:///./src/components/seo.js"],"names":["Layout","size","setSize","children","useState","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","layoutStyle","backgroundColor","theme","palette","background","lightBlue","minWidth","height","minHeight","border","overflow","style","Counter","props","restart","tl","pause","onRestart","state","count","_count","componentDidMount","TweenMax","to","this","onUpdate","setState","repeat","yoyo","ease","Linear","easeNone","TimelineLite","onComplete","box","rotation","scaleX","componentDidUpdate","prevProps","animate","resume","render","className","ref","c","React","Component","AnimateCounter","toggle","href","onClick","AnimateExample","title","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-animate-example-js-2be0fa6576143355b6bf.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n//import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport React, { useLayoutEffect, useState } from 'react'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport theme from \"../theme\"\n\nfunction useWindowSize() {\n  const [size, setSize] = useState([0, 0])\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', updateSize)\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize)\n  }, [])\n  return size\n}\n\n// function ShowWindowDimensions(props) {\n//   const [width, height] = useWindowSize();\n//   return <span>Window size: {width} x {height}</span>;\n// }\n\nconst Layout = ({ children }) => {\n  const [width, height] = useWindowSize();\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const layoutStyle = { backgroundColor:theme.palette.background.lightBlue, minWidth:'100%',height:'100vh',minHeight:'100vh',border: '0px solid yellow',overflow:'hidden'}\n\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <CookiesProvider>\n      <div style={layoutStyle}>\n\n        <main>{children}</main>\n        {/* <footer>\n          Â© {new Date().getFullYear()}, \n          {` `}\n          <p>test</p>\n        </footer> */}\n      </div>\n      </CookiesProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","// import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { TweenMax, Linear, TimelineLite } from \"gsap\";\nimport Layout from '../components/layout'\nimport SEO from \"../components/seo\"\nimport React from 'react'\nimport { navigate } from 'gatsby-link'\n\nclass Counter extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n    this._count = 0;\n  }\n  \n  componentDidMount() {\n    TweenMax.to(this, 5, { \n      _count: 100, \n      onUpdate: () => this.setState({ count: ~~this._count }),\n      repeat: -1,\n      yoyo: true,\n      ease: Linear.easeNone,\n    });\n    \n    this.tl = new TimelineLite({ onComplete: this.restart });\n    this.tl.to(this.box, 1, { rotation: 45 });\n    this.tl.to(this.box, 0.5, { rotation: 0 });\n    this.tl.to(this.box, 1, { scaleX: -1, yoyo: true, repeat: 1 });\n    this.tl.pause();\n  }\n  \n  componentDidUpdate(prevProps) {\n    // Was there a change in the animate prop?\n    if(prevProps.animate !== this.props.animate) {\n      this.props.animate ? this.tl.resume() : this.tl.pause();\n    }\n    if(prevProps.restart !== this.props.restart && this.props.restart === true) {\n      this.restart();\n    }\n  }\n  \n  restart = () => {\n    this.tl.restart();\n    this.tl.pause();\n    this.props.onRestart();\n  };\n  \n  render() {\n    return (\n      <div className=\"Box\" ref={c => this.box = c } >\n        {this.state.count}\n      </div>\n    );\n  }\n}\n\n// -- Wrapper component --------------------------\nclass AnimateCounter extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { animate: false };\n  }\n  \n  toggle = () => this.setState({ animate: ! this.state.animate });\n  onRestart = () => this.setState({ animate: false });\n  \n  render() {\n    return (\n      <div>\n        <Counter \n          animate={this.state.animate} \n          restart={this.state.restart}\n          onRestart={this.onRestart}\n        />\n        <p>Actions below control timeline (intentionally seperate from counter)</p>\n        <a href=\"#\" onClick={this.toggle}>\n          {this.state.animate ? \"Pause timeline\" : \"Start timeline\"}\n        </a>\n      </div>\n    );\n  }\n}\n\n// export default AnimateCounter\n\nconst AnimateExample = () => {\n    return (\n    <Layout>\n        <SEO title=\"About\" />\n        <h1>About</h1>\n        <AnimateCounter />\n        <Link to=\"/\">Back to home</Link>\n    </Layout>\n    )\n}\n\nexport default AnimateExample\n\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}