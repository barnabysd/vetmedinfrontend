{"version":3,"sources":["webpack:///./src/pages/murmur-treatment.js","webpack:///./src/components/BottomNavigationLink.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","MurmurTreatmentQuestionResponseLayout","type","slideTypes","QUESTION_POSED","resources","navigationLeftHandler","navigationRightHandler","dogChoice","buttonLinks","field_buttonlinks","length","currentCaseStudySlideData","ANSWER_WITH_VIDEO","ANSWER_NO_VIDEO","isCorrectAnswer","field_iscorrectanswer","id","treatmentApproachSteps","title","url","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","useVideoWidget","answerHeader","replaceDogName","removeParagraphsTags","field_answerheader","answerText","field_answertext","processed","additionalText","field_additionalbodytext","videoText1","field_videocaptiontext1","CORRECT_ANSWER_XRAY_ONLY","CORRECT_ANSWER_ULTRASOUND","INCORRECT_ANSWER_ECG","CORRECT_ANSWER_XRAY_AND_ULTRASOUND","INCORRECT_ANSWER_NO_TREATMENT","INCORRECT_ANSWER_HOLTER_MONITORING","questionText","field_questiontext","headerText","ref","React","createRef","container","justify","style","border","item","xs","sm","align","autoPlay","currentSlidePosition","MurmurTreatment","data","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","dogName","DUDLEY","initialState","step","taskCompleted","useState","state","setState","useEffect","newCaseStudyProgress","setCaseStudyProgress","tasks","WHICH_EXAMINATION","console","log","resourcesAr","get","resourcesAnswersAr","getSlideData","murmurTreatmentResourcesSlugNames","setCurrentStep","tryAgain","e","handleLeftClick","handleRightClick","showPercentIndicator","to","distanceFromSide","bottom","direction","bottomNavigationLinkDirection","FORWARD","linkText","className","position","zIndex","currentTarget","pageQuery","BottomNavigationLink","onClick","right","width","height","display","flexDirection","justifyContent","alignContent","alignItems","textDecoration","primary","main","fontFamily","typography","fontWeight","typeOfButton","buttonStyleType","FORWARD_NORMAL_LINK","left","BACK_NORMAL_LINK"],"mappings":"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","file":"component---src-pages-murmur-treatment-js-62a7c0fef173a3bf1e49.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Layout from '../components/layout'\nimport theme from \"../theme\"\n// import ReactPlayer from \"react-player\"\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport CaseStudyLeftArrow from \"../components/CaseStudyLeftArrow\"\nimport CaseStudyRightArrow from \"../components/CaseStudyRightArrow\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResponse from \"../components/QuestionResponse\"\nimport QuestionPosed from \"../components/QuestionPosed\"\nimport ResponseVideo from \"../components/ResponseVideo\"\n\nimport BottomNavigationLink from \"../components/BottomNavigationLink\"\n\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport { stripUneededHtml, getSlideData, replaceDogName, removeParagraphsTags } from \"../utils/displayUtils\"\nimport { setCaseStudyProgress } from \"../utils/dataUtils\"\nimport { dogName, \n  ownerName, \n  ownerResponseSteps, \n  cookieKeyNames, \n  tasks,\n  slideTypes,\n  murmurTreatmentResourcesSlugNames,\n  bottomNavigationLinkDirection,\n  treatmentApproachSteps,\n  legacyButtonTypes\n} from \"../WebsiteConstants\"\nimport FixedSizeVideoWidget from \"../components/FixedSizeVideoWidget\"\n\n//NB: - useEffect(() - very good reference https://dev.to/spukas/4-ways-to-useeffect-pf6\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n}));\n\nfunction MurmurTreatment({data}) {\n\n   // =================== GET GLOBAL DATA ==================\n\n  const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n  const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"] : dogName.DUDLEY\n\n  // =================== SETUP STATE ==================\n\n  const initialState = { step: treatmentApproachSteps.QUESTION_POSED, taskCompleted: false }\n  const [state, setState] = useState(initialState)\n\n // =================== CHECK COMPLETION STATUS ==================\n\n  useEffect(() => {\n    if (state.step === treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY\n      || state.step === treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND\n      || state.step === treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND) { \n    \n          const newCaseStudyProgress = setCaseStudyProgress(tasks.WHICH_EXAMINATION,dogChoice,cookies)\n          console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n          setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,true,\"/\")\n    } \n  },[state.step])\n\n  // =================== GET PAGES DATA ==================\n\n  const resourcesAr = get(data, 'allNodeQuestion.nodes')\n  const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n\n  let resources = null\n        \n  switch (state.step) {\n      case treatmentApproachSteps.QUESTION_POSED:\n        resources = getSlideData(resourcesAr,murmurTreatmentResourcesSlugNames.QUESTION_POSED)\n        break\n      case treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_XRAY_ONLY)\n        break\n      case treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_XRAY_AND_ULTRASOUND)\n        break\n      case treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_ULTRASOUND)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_ECG:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_ECG)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_NO_TREATMENT)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_HOLTER_MONITORING)\n        break\n    default:\n      return \"no current slide\"\n  }\n  console.log(\"=========== current Step - step \",state.step)\n  console.log(resources)\n  if (!resources) return \"resources not found\"\n  if (resources == \"NO_DATA_FOUND\") return \"resources not found\"\n\n  // =================== NAVIGATION  ==================\n\n  const setCurrentStep = (step) => {   \n    console.log(\"=========== setCurrentStep - step \",step)\n    setState({...state, step: step})\n  }\n\n  const tryAgain = (e) => {\n    setState({...state, step: treatmentApproachSteps.QUESTION_POSED})\n  }\n\n  const answerSelected = (e) => {\n    if (e.currentTarget.id) {\n      switch (e.currentTarget.id) {\n          case (treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND)\n          break\n          case (treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND)\n          break\n          case (treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_ECG):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_ECG)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING)\n          break\n          default:\n              console.log(\"no matching id on question button\")\n              setCurrentStep(treatmentApproachSteps.QUESTION_POSED)\n      }\n    } else {\n      console.log(\"no id on question button\")\n      setCurrentStep(treatmentApproachSteps.QUESTION_POSED)\n    }\n  }\n\n  const handleLeftClick = (e) => {\n      console.log(\"handleLeftClick\")\n  }\n\n  const handleRightClick = (e) => {\n      console.log(\"handleRightClick\")\n  }\n\n  return (\n    <Layout headerText={replaceDogName(\"Poppy has a grade 3 mitral valve murmur\",dogChoice)} showPercentIndicator={true}>\n\n     {((treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND === state.step \n     || treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND === state.step \n     || treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY === state.step)) ?\n      <BottomNavigationLink to={\"/owner-response\"}\n                  distanceFromSide={\"2%\"}\n                  bottom={\"2%\"}\n                  direction={bottomNavigationLinkDirection.FORWARD}\n                  linkText={\"Continue\"}\n      /> : '' }\n\n      <div className={(useStyles()).root} style={{position: 'relative', zIndex:'1 !important'}}>\n\n           { (treatmentApproachSteps.QUESTION_POSED  === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.QUESTION_POSED} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={answerSelected} /> : '' }\n           \n           { (treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           { (treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           { (treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           \n           { (treatmentApproachSteps.INCORRECT_ANSWER_ECG === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n           { (treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n           { (treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n     \n      </div>\n  </Layout>\n\n)}\n\nconst MurmurTreatmentQuestionResponseLayout = ({type = slideTypes.QUESTION_POSED, resources, navigationLeftHandler, navigationRightHandler, dogChoice }) => {\n  //debugger\n  let buttonLinks = []\n  if (resources.field_buttonlinks && resources.field_buttonlinks.length > 0) {\n     // this get over ridden\n     buttonLinks = resources.field_buttonlinks\n  }\n\n  let currentCaseStudySlideData = {}\n  switch (type) {\n      case slideTypes.ANSWER_WITH_VIDEO:\n      case slideTypes.ANSWER_NO_VIDEO:\n\n                const isCorrectAnswer = resources.field_iscorrectanswer[0] === \"yes\" ? true : false\n\n                buttonLinks = [{}]\n\n                if (isCorrectAnswer === false) {\n\n                    buttonLinks[0].id = treatmentApproachSteps.QUESTION_POSED\n                    buttonLinks[0].title = \"Try again\"\n                    buttonLinks[0].url = \"/\"\n                    buttonLinks[0].onClickHandler = navigationRightHandler\n                    buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n                }\n\n                //debugger\n\n                // =========== NORMALISE DRUPAL DATA ========\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: isCorrectAnswer,\n                    isCorrectAnswer: resources.field_iscorrectanswer[0],\n                    answerHeader: replaceDogName(removeParagraphsTags(resources.field_answerheader ? resources.field_answerheader : '', dogChoice)),\n                    answerText: replaceDogName(removeParagraphsTags(resources.field_answertext ? resources.field_answertext.processed : '', dogChoice)), \n                    additionalText: replaceDogName(removeParagraphsTags(resources.field_additionalbodytext ? resources.field_additionalbodytext.processed : '', dogChoice)), \n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks,\n                }\n           break\n      case slideTypes.QUESTION_POSED:\n                // =========== NORMALISE DRUPAL DATA ========\n\n                buttonLinks = [{},{},{},{},{},{}]\n\n                buttonLinks[0].id = treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY\n                buttonLinks[0].title = \"X-ray\"\n                buttonLinks[0].url = \"/\"\n\n                buttonLinks[1].id = treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND\n                buttonLinks[1].title = \"Ultrasound\"\n                buttonLinks[1].url = \"/\"\n\n                buttonLinks[2].id = treatmentApproachSteps.INCORRECT_ANSWER_ECG\n                buttonLinks[2].title = \"ECG\"\n                buttonLinks[2].url = \"/\"\n\n                buttonLinks[3].id = treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND\n                buttonLinks[3].title = \"X-ray and ultrasound\"\n                buttonLinks[3].url = \"/\"\n\n                buttonLinks[4].id = treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT\n                buttonLinks[4].title = \"Finish Appointment\"\n                buttonLinks[4].url = \"/\"\n\n                buttonLinks[5].id = treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING\n                buttonLinks[5].title = \"Holter monitoring\"\n                buttonLinks[5].url = \"/\"\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: false,\n                    questionText: resources.field_questiontext,\n                    headerText: resources.field_questiontext,\n                    additionalText: resources.field_additionalbodytext,\n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks\n                }\n          break\n    default:\n         return \"type not found\"\n  }\n\n  const ref = React.createRef();\n\n  return (\n    <section>\n   \n    <Grid container  \n    spacing={0} \n    spacing={0} \n    justify=\"center\" \n    style={{border: '0px solid black'}}>\n   \n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n      <Grid item xs={12} sm={5}  align=\"center\" style={{border: '0px solid red'}}>\n       \n          <FixedSizeVideoWidget autoPlay=\"true\" ref={ref} currentCaseStudySlideData={currentCaseStudySlideData} /> \n       \n      </Grid>\n\n      <Grid item xs={12} sm={5}  align=\"left\" style={{ border: '0px solid red' }}>\n        {(type === slideTypes.QUESTION_POSED) ?\n          <QuestionPosed currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationRightHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> : ''\n        }\n\n        {(type === slideTypes.ANSWER_WITH_VIDEO || type === slideTypes.ANSWER_NO_VIDEO) ?\n          <QuestionResponse currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationLeftHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> :''\n        }\n            \n      </Grid>\n\n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n    </Grid>\n    </section>\n  )\n}\n\nexport default MurmurTreatment\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optioniscorrect5\n        field_optioniscorrect6\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsbodytext5 {\n          processed\n        }\n        field_optionsbodytext6 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_answerheader\n        field_answertext {\n          processed\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_iscorrectanswer\n        field_progresspercent\n        field_slugname\n        field_topheadertext {\n          processed\n        }\n        field_videocaptiontext1 {\n          processed\n        }\n        field_videoduration1\n        field_videonarrator1\n        field_videotext1 {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n  }\n  `\n\n\n\n","import React from \"react\"\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded'\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded'\nimport theme from '../theme'\nimport WebsiteLink, {buttonStyleType} from '../components/WebsiteLink'\nimport styled from 'styled-components'\n\nconst BottomNavigationLink = ({linkText = 'Back',to = '/', distanceFromSide=\"10%\", bottom=\"0\", direction=\"forward\", onClick = null}) => {\n\n    if (direction === \"forward\") {\n        return (\n            <div style={{\n                position: 'absolute',\n                right: distanceFromSide, \n                bottom: bottom,\n                width:'150px',\n                height: '100px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignContent:'center',\n                alignContent: 'center',\n                textAlign: 'center',\n                zIndex:'100',\n                border:'0px solid red',\n                zIndex: '10'\n        \n            }}> \n                <WebsiteLink onClick={onClick} \n                        style={{display: 'flex',\n                            flexDirection:'row',\n                            alignItems:'center',\n                            width:'200px',\n                            height:'50px',\n                            textDecoration:'none',\n                            color:theme.palette.primary.main,\n                            fontFamily:theme.typography.fontFamily,\n                            fontWeight:'700'\n                        }} \n                        to={to}\n                        typeOfButton={buttonStyleType.FORWARD_NORMAL_LINK}>\n                            {linkText}\n                </WebsiteLink>\n            </div>\n        )\n    } else {\n        return (\n            <div style={{\n                position: 'absolute',\n                left: distanceFromSide, \n                bottom: bottom,\n                width:'150px',\n                height: '100px',\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignContent: 'center',\n                textAlign: 'center',\n                zIndex:'100',\n                border:'0px solid red',\n                zIndex: '10'\n        \n            }}>   \n                <WebsiteLink onClick={onClick} \n                    style={{display: 'flex',\n                        flexDirection:'row',\n                        alignItems:'center',\n                        alignContent:'center',\n                        width:'200px',\n                        height:'50px',\n                        textDecoration:'none',\n                        color:theme.palette.primary.main,\n                        fontFamily:theme.typography.fontFamily,\n                        fontWeight:'700'\n                    }} \n                    to={to}\n                    typeOfButton={buttonStyleType.BACK_NORMAL_LINK}>\n                          {linkText}\n                </WebsiteLink> \n            \n            </div>\n            \n            )\n        }\n}\n\nexport default BottomNavigationLink\n\n"],"sourceRoot":""}