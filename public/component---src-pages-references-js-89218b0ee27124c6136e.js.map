{"version":3,"sources":["webpack:///./src/pages/references.js"],"names":["StyledTypography","styled","Typography","gridStyle","border","References","render","resources","get","this","console","log","scrollablePage","showPercentIndicator","showBurgerMenuIcon","container","spacing","justify","style","item","xs","sm","height","theme","display","flexDirection","marginLeft","marginRight","variant","field_headertext","field_references","map","child","index","entryHtml","__html","processed","removeParagraphsTags","length","key","marginTop","marginBottom","dangerouslySetInnerHTML","React","Component","pageQuery"],"mappings":"uSAsBA,IAAMA,EAAmBC,kBAAOC,KAAV,mFAAGD,CAAH,yBAIhBE,EAAY,CAACC,OAAQ,iBAErBC,E,gLACJC,OAAA,WAAU,IAAD,EAEDC,EADcC,IAAIC,KAAM,sCACA,GAI9B,OAHAC,QAAQC,IAAIJ,GAIV,kBAAC,IAAD,CAAQK,gBAAgB,EAAOC,sBAAsB,EAAOC,oBAAoB,GAI5E,kBAAC,MAAD,GAAMC,WAAS,EACXC,QAAS,IADb,QAEa,EAFb,EAGIC,QAAQ,aAHZ,EAIIC,MAAOf,EAJX,GAKI,kBAAC,IAAD,CAAMgB,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIH,MAAOf,GAC/B,yBAAKe,MAAO,CAACI,OAAQ,YAExB,kBAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAIH,MAAOf,IAClC,kBAAC,IAAD,CAAMgB,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAIH,MAAOf,GAC9B,kBAAC,IAAD,CAAeoB,MAAOA,KACpB,yBAAKL,MAAO,CAACM,QAAS,OAAQC,cAAc,MAAMC,WAAY,OAAOC,YAAa,SAAS,kBAAC3B,EAAD,CAAkB4B,QAAQ,MAAMrB,EAAUsB,mBAEpItB,EAAUuB,iBAAkBC,KAAI,SAACC,EAAOC,GACrC,IAAMC,EAAY,CAAEC,OAAQH,EAAMI,WAIlC,MAAO,CAFOC,YAAqB,IAEnBJ,IAAW1B,EAAUuB,iBAAkBQ,OAAS,GAE3D,yBAAKC,IAAM,MAAQN,EAAQ,EAAIf,MAAO,CAACM,QAAS,OAAQC,cAAc,MAAMC,WAAY,OAAOC,YAAa,SAC1G,yBAAKT,MAAO,CAACsB,UAAW,OAAOC,aAAc,OAAOd,YAAa,SAC7DM,EAAQ,EADZ,MAED,yBAAKf,MAAO,CAACsB,UAAW,OAAOC,aAAc,QAASC,wBAAyBR,WAU/F,kBAAC,IAAD,CAAMf,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAIH,MAAOf,O,GA7CvBwC,IAAMC,WAoDhBvC,YAER,IAAMwC,EAAS","file":"component---src-pages-references-js-89218b0ee27124c6136e.js","sourcesContent":["import React from 'react'\nimport get from 'lodash/get'\nimport Layout from '../components/layout'\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby' \nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider, Typography } from '@material-ui/core';\nimport theme from '../theme'\nimport styled from 'styled-components'\nimport SlideDrawer from '../components/SideDrawer'\nimport Grid from '@material-ui/core/Grid'\nimport { removeParagraphsTags } from '../utils/displayUtils'\n\n\n\n// const StyledButton = styled(Button)`\n//   background-color: #6772e5;\n//   &:hover {\n//     background-color: #5469d4;\n//   }\n// `;\n\nconst StyledTypography = styled(Typography)`\n    margin-bottom: 3rem;\n`;\n\nconst gridStyle = {border: '0px solid red'}\n\nclass References extends React.Component {\n  render() {\n    const resourcesAr = get(this, 'props.data.allNodeReferences.nodes')\n    const resources = resourcesAr[0]\n    console.log(resources)\n    //console.log(resources.additionalBodyText)\n\n    return (\n      <Layout scrollablePage={false} showPercentIndicator={false} showBurgerMenuIcon={true}>\n          \n     \n\n          <Grid container  \n              spacing={0} \n              spacing={0} \n              justify=\"flex-start\" \n              style={gridStyle}>\n              <Grid item xs={12} sm={12} style={gridStyle}>\n                 <div style={{height: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}></Grid>\n              <Grid item xs={12} sm={8}  style={gridStyle}>\n                  <ThemeProvider theme={theme}>\n                    <div style={{display: 'flex', flexDirection:'row',marginLeft: '1rem',marginRight: '1rem'}}><StyledTypography variant=\"h1\">{resources.field_headertext}</StyledTypography></div>\n{ \n                    (resources.field_references).map((child, index) => {\n                        const entryHtml = { __html: child.processed  }\n\n                        const entry = removeParagraphsTags(\"\")\n                        \n                        return [ entry, index !== (resources.field_references).length - 1 && (\n                            // <StyledTypography variant=\"body1\">{entry}</StyledTypography>\n                             <div key={(\"key\" + index + 1)} style={{display: 'flex', flexDirection:'row',marginLeft: '1rem',marginRight: '1rem'}}>\n                               <div style={{marginTop: '1rem',marginBottom: '1rem',marginRight: '1rem'}}>\n                                 {(index + 1)}.&nbsp;</div>\n                              <div style={{marginTop: '1rem',marginBottom: '1rem'}} dangerouslySetInnerHTML={entryHtml} />\n                            </div>\n                          \n                          )\n                        ]\n                      })\n                    } \n\n                  </ThemeProvider>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}></Grid>\n          </Grid>\n        </Layout>\n    )\n  }\n}\n\nexport default References\n\nexport const pageQuery = graphql`{\n  allNodeReferences {\n    nodes {\n      field_headertext\n      field_references {\n        processed\n      }\n      path {\n        alias\n      }\n    }\n  }\n}`"],"sourceRoot":""}