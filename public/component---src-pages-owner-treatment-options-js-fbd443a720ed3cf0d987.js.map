{"version":3,"sources":["webpack:///./src/pages/owner-treatment-options.js"],"names":["OwnerTreatmentOptions","data","console","log","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","initialState","step","ownerTreatmentSteps","SECTION_INTRO","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","resourcesIntroAr","resourcesOwnerQuestionAr","resourcesAnswersAr","id","setCurrentStep","useEffect","CORRECT_ANSWER","newCaseStudyProgress","setCaseStudyProgress","tasks","REASSURING_OWNER","path","getSlideData","ownerTreatmentOptionsSlugNames","QUESTION_POSED_BY_OWNER","QUESTION_POSED_BY_OWNER_DUDLEY","REGGIE","QUESTION_POSED_BY_OWNER_REGGIE","POPPY","QUESTION_POSED_BY_OWNER_POPPY","animationVideoName","getOwnerVideo","QUESTION_POSED","QUESTION_POSED_DUDLEY","QUESTION_POSED_REGGIE","QUESTION_POSED_POPPY","correctAnswerStep","incorrectAnswerStep","INCORRECT_ANSWER","videoCorrectAnswer","getVideoData","ownerResponse_CorrectAnswer","answerHeader","field_answerheader","processField","answerText","field_answertext","additionalText","field_additionalbodytext","isCorrectAnswer","field_iscorrectanswer","mainImage","getDogImageName","animationCharacterState","HAPPY","slugName","continueLink","uri","title","url","backLink","accessibilityVideoText","buttonLinks","updateSlideDataWithVideoData","videoIncorrectAnswer","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","ownerResponse_InCorrectAnswer","SAD","style","display","e","pageQuery"],"mappings":"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","file":"component---src-pages-owner-treatment-options-js-fbd443a720ed3cf0d987.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerTreatmentSteps, cookieKeyNames, tasks, ownerTreatmentOptionsSlugNames, legacyButtonTypes, animationCharacterState, ownerTreatmentSlugNames } from \"../WebsiteConstants\"\nimport { processInternalLink, stripUneededHtml, removeParagraphsTags, getSlideData, processField } from '../utils/displayUtils'\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport { setCaseStudyProgress, getVideoData, updateSlideDataWithVideoData } from \"../utils/dataUtils\"\nimport { getDogImageName, getOwnerVideo } from \"../utils/assetUtils\"\n\nconst OwnerTreatmentOptions = ({data}) => {\n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n        let initialState = { \n            step: ownerTreatmentSteps.SECTION_INTRO, \n        }\n\n        /* ===== CONSTANTS ==== */\n\n        const buttonIds = {\n          INCORRECT_ANSWER: \"ownertreatmentincorrect1\",\n          QUESTION_POSED: \"ownertreatmentquestionposed1\"\n        }\n    \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        const resourcesIntroAr = get(data, 'allNodeSectionintroduction.nodes')\n        const resourcesOwnerQuestionAr = get(data, 'allNodeOwnerquestion.nodes')\n        const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n        \n        const id = \"ownerResponsePage\"\n        const style = {}\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        const tryAgain = (e) => {\n            setCurrentStep(ownerTreatmentSteps.QUESTION_POSED)\n        }\n\n        // =================== CHECK COMPLETION STATUS ==================\n\n        useEffect(() => {\n          if (state.step === ownerTreatmentSteps.CORRECT_ANSWER) { \n            const newCaseStudyProgress = setCaseStudyProgress(tasks.REASSURING_OWNER,dogChoice,cookies)\n            console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n            setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,{ path: '/' })  \n          } \n        },[state.step])\n\n        switch (state.step) {\n          case ownerTreatmentSteps.SECTION_INTRO:\n            resources = getSlideData(resourcesIntroAr,ownerTreatmentOptionsSlugNames.SECTION_INTRO)\n          \n            break\n          case ownerTreatmentSteps.QUESTION_POSED_BY_OWNER:\n              if (dogChoice === dogName.DUDLEY) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_DUDLEY)}\n              if (dogChoice === dogName.REGGIE) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_REGGIE)}\n              if (dogChoice === dogName.POPPY) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_POPPY)}\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              \n            break\n          case ownerTreatmentSteps.QUESTION_POSED:\n              if (dogChoice === dogName.DUDLEY) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_DUDLEY)}\n              if (dogChoice === dogName.REGGIE) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_REGGIE)}\n              if (dogChoice === dogName.POPPY) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_POPPY)}\n\n              resources.correctAnswerStep = ownerTreatmentSteps.CORRECT_ANSWER\n              resources.incorrectAnswerStep = ownerTreatmentSteps.INCORRECT_ANSWER\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              \n            break\n            case ownerTreatmentSteps.CORRECT_ANSWER:\n        \n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentOptionsSlugNames.CORRECT_ANSWER)\n               \n              let videoCorrectAnswer = getVideoData(resources,dogChoice)\n\n              let ownerResponse_CorrectAnswer = {\n  \n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.HAPPY,dogChoice),\n                  slugName: ownerTreatmentOptionsSlugNames.CORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/certificate-request'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: [],\n                  dogChoice:dogChoice,\n              }\n        \n              resources = updateSlideDataWithVideoData(ownerResponse_CorrectAnswer,videoCorrectAnswer) \n              console.log(resources)\n            break\n            case ownerTreatmentSteps.INCORRECT_ANSWER:\n           \n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentOptionsSlugNames.INCORRECT_ANSWER)\n\n              let videoIncorrectAnswer = getVideoData(resources,dogChoice)\n\n              const buttonLinks = [{}]\n\n              buttonLinks[0].id = buttonIds.QUESTION_POSED\n              buttonLinks[0].title = \"Try again\"\n              buttonLinks[0].url = \"/\"\n              buttonLinks[0].onClickHandler = () => { setCurrentStep(ownerTreatmentSteps.QUESTION_POSED) }\n              buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n              let ownerResponse_InCorrectAnswer = {\n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.SAD,dogChoice),\n                  slugName: ownerTreatmentOptionsSlugNames.INCORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: buttonLinks,\n                  dogChoice: dogChoice,\n              }\n\n              resources = updateSlideDataWithVideoData(ownerResponse_InCorrectAnswer,videoIncorrectAnswer)  \n              console.log(resources)\n            break\n          default:\n            return \"no current slide\"\n        }\n        \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n\n      \n        \n    return (\n        <Layout>\n              { state.step === ownerTreatmentSteps.SECTION_INTRO ? <QuestionResPage step={ownerTreatmentSteps.SECTION_INTRO} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.QUESTION_POSED_BY_OWNER ? <QuestionResPage step={ownerTreatmentSteps.QUESTION_POSED_BY_OWNER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.QUESTION_POSED ? <QuestionResPage step={ownerTreatmentSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerTreatmentSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerTreatmentSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={tryAgain} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default OwnerTreatmentOptions\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n    allNodeSectionintroduction {\n      nodes {\n        field_headertext\n        path {\n          alias\n        }\n      }\n    }\n    allNodeOwnerquestion {\n      nodes {\n        field_headertext\n        field_additionalbodytext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n    nodes {\n      drupal_id\n      created(fromNow: false)\n      field_accessibilityvideotext\n      field_additionalbodytext {\n        processed\n      }\n      field_animationvideoname\n      field_answerheader\n      field_answertext {\n        processed\n      }\n      field_buttonlinks {\n        title\n        uri\n      }\n      field_continuelink {\n        title\n        uri\n      }\n      field_iscorrectanswer\n      field_progresspercent\n      field_slugname\n      field_topheadertext {\n        processed\n      }\n      field_videocaptiontext1 {\n        processed\n      }\n      field_videoduration1\n      field_videonarrator1\n      field_videoposterimage1 {\n        width\n        alt\n        height\n        title\n      }\n      field_videothumbnail1 {\n        alt\n        height\n        title\n        width\n      }\n      path {\n        alias\n      }\n      field_videocaptiontext2 {\n        processed\n      }\n      field_videocaptiontext3 {\n        processed\n      }\n      field_videofordog1\n      field_videofordog2\n      field_videofordog3\n      field_videonarrator2\n      field_videonarrator3\n      field_videoposterimage2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videoposterimage3 {\n        alt\n        height\n        title\n        width\n      }\n      field_videothumbnail2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videotitle1 {\n        processed\n      }\n      field_videotitle2 {\n        processed\n      }\n      field_videotitle3 {\n        processed\n      }\n      relationships {\n        field_video1 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n                internal {\n                  content\n                  description\n                  ignoreType\n                  mediaType\n                }\n              }\n              filesize\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n        field_video2 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n        field_videoposterimage1 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage2 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage3 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail1 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail2 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail3 {\n          localFile {\n            url\n          }\n        }\n        field_video3 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n      }\n      field_videonarratorlocation1 {\n        processed\n      }\n      field_videonarratorlocation2 {\n        processed\n      }\n      field_videonarratorlocation3 {\n        processed\n      }\n      field_videonarratorprofession1 {\n        processed\n      }\n      field_videonarratorprofession2 {\n        processed\n      }\n      field_videonarratorprofession3 {\n        processed\n      }\n      field_videoduration3\n      field_videoduration2\n      field_videothumbnail3 {\n        alt\n        height\n        title\n        width\n      }\n    }\n  }\n  }\n  `\n\n"],"sourceRoot":""}