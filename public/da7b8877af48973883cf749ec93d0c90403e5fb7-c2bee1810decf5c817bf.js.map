{"version":3,"sources":["webpack:///./src/components/ScalingCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","webpack:///./node_modules/@material-ui/core/esm/IconButton/IconButton.js","webpack:///./node_modules/@material-ui/core/esm/internal/SwitchBase.js","webpack:///./node_modules/@material-ui/core/esm/utils/createSvgIcon.js","webpack:///./node_modules/@material-ui/core/esm/FormControl/useFormControl.js","webpack:///./node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","webpack:///./node_modules/@material-ui/core/esm/styles/createStyles.js","webpack:///./node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","webpack:///./node_modules/@material-ui/core/esm/utils/useControlled.js"],"names":["GreenCheckbox","withStyles","root","color","blue","checked","props","ScalingCheckBox","checkBoxLabel","React","useState","checkedG","state","setState","row","control","onChange","event","target","name","label","FormControlContext","useFormControl","ref","_props$edge","edge","children","classes","className","_props$color","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","_props$size","size","other","ButtonBase","concat","capitalize","edgeStart","edgeEnd","centerRipple","focusRipple","theme","textAlign","flex","fontSize","typography","pxToRem","padding","borderRadius","overflow","palette","action","active","transition","transitions","create","duration","shortest","backgroundColor","hoverOpacity","marginLeft","marginRight","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","sizeSmall","width","display","alignItems","justifyContent","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","onBlur","onFocus","readOnly","required","tabIndex","type","value","_useControlled","useControlled","controlled","default","Boolean","_useControlled2","setCheckedState","muiFormControl","hasLabelFor","component","role","undefined","input","newChecked","cursor","position","opacity","height","top","left","margin","zIndex","createSvgIcon","path","displayName","Component","memo","forwardRef","createElement","muiName","FormGroup","_props$row","flexDirection","flexWrap","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","SwitchBase","text","createStyles","styles","FormControlLabel","_props$labelPlacement","labelPlacement","controlProps","forEach","key","verticalAlign","WebkitTapHighlightColor","labelPlacementStart","labelPlacementTop","labelPlacementBottom","_ref","defaultProp","isControlled","current","_React$useState","valueState","setValue","newValue"],"mappings":"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","file":"da7b8877af48973883cf749ec93d0c90403e5fb7-c2bee1810decf5c817bf.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    '&$checked': {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction ScalingCheckBox({checkBoxLabel}) {\n  const [state, setState] = React.useState({\n    checkedG: true,\n  });\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <FormGroup row>\n      {/* <FormControlLabel\n        control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\n        label=\"Secondary\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedB}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Primary\"\n      />\n      <FormControlLabel control={<Checkbox name=\"checkedC\" />} label=\"Uncontrolled\" />\n      <FormControlLabel disabled control={<Checkbox name=\"checkedD\" />} label=\"Disabled\" />\n      <FormControlLabel disabled control={<Checkbox checked name=\"checkedE\" />} label=\"Disabled\" />\n      <FormControlLabel\n        control={\n          <Checkbox\n            checked={state.checkedF}\n            onChange={handleChange}\n            name=\"checkedF\"\n            indeterminate\n          />\n        }\n        label=\"Indeterminate\"\n      /> */}\n      <FormControlLabel\n        control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\n        label={checkBoxLabel}\n      />\n      {/* <FormControlLabel\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\n        label=\"Custom icon\"\n      />\n      <FormControlLabel\n        control={\n          <Checkbox\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\n            name=\"checkedI\"\n          />\n        }\n        label=\"Custom size\"\n      /> */}\n    </FormGroup>\n  );\n}\n\nexport default ScalingCheckBox\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      textAlign: 'center',\n      flex: '0 0 auto',\n      fontSize: theme.typography.pxToRem(24),\n      padding: 12,\n      borderRadius: '50%',\n      overflow: 'visible',\n      // Explicitly set the default value to solve a bug on IE 11.\n      color: theme.palette.action.active,\n      transition: theme.transitions.create('background-color', {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.action.active, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: 'transparent',\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -12,\n      '$sizeSmall&': {\n        marginLeft: -3\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -12,\n      '$sizeSmall&': {\n        marginRight: -3\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 3,\n      fontSize: theme.typography.pxToRem(18)\n    },\n\n    /* Styles applied to the children container element. */\n    label: {\n      width: '100%',\n      display: 'flex',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    }\n  };\n};\n/**\n * Refer to the [Icons](/components/icons/) section of the documentation\n * regarding the available icon options.\n */\n\nvar IconButton = React.forwardRef(function IconButton(props, ref) {\n  var _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"edge\", \"children\", \"classes\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], disabled && classes.disabled, size === \"small\" && classes[\"size\".concat(capitalize(size))], {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge]),\n    centerRipple: true,\n    focusRipple: !disableFocusRipple,\n    disabled: disabled,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? IconButton.propTypes = {\n  /**\n   * The icon element.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    var found = React.Children.toArray(props.children).some(function (child) {\n      return React.isValidElement(child) && child.props.onClick;\n    });\n\n    if (found) {\n      return new Error(['Material-UI: you are providing an onClick event listener ' + 'to a child of a button element.', 'Firefox will never trigger the event.', 'You should move the onClick listener to the parent button element.', 'https://github.com/mui-org/material-ui/issues/13957'].join('\\n'));\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiIconButton'\n})(IconButton);","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import { createStyles as createStylesOriginal } from '@material-ui/styles'; // let warnOnce = false;\n// To remove in v5\n\nexport default function createStyles(styles) {\n  // warning(\n  //   warnOnce,\n  //   [\n  //     'Material-UI: createStyles from @material-ui/core/styles is deprecated.',\n  //     'Please use @material-ui/styles/createStyles',\n  //   ].join('\\n'),\n  // );\n  // warnOnce = true;\n  return createStylesOriginal(styles);\n}","import \"core-js/modules/es6.function.name\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import \"core-js/modules/es6.function.name\";\n\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name,\n      _ref$state = _ref.state,\n      state = _ref$state === void 0 ? 'value' : _ref$state;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: a component is changing the \".concat(isControlled ? '' : 'un', \"controlled \").concat(state, \" state of \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render, it's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: a component is changing the default \".concat(state, \" state of an uncontrolled \").concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}"],"sourceRoot":""}