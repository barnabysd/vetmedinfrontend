{"version":3,"sources":["webpack:///./src/pages/accessibility-policy.js"],"names":["StyledTypography","styled","Typography","gridStyle","border","AccessPolicyBody","div","AccessibilityPolicy","render","resources","get","this","console","log","bodyHtml","__html","field_bodytext","processed","scrollablePage","showPercentIndicator","showBurgerMenuIcon","container","spacing","justify","style","item","xs","sm","height","width","theme","variant","field_headertext","dangerouslySetInnerHTML","React","Component","pageQuery"],"mappings":"2RAYA,IAAMA,EAAmBC,kBAAOC,KAAV,yFAAGD,CAAH,yBAIhBE,EAAY,CAACC,OAAQ,iBAErBC,EAAmBJ,UAAOK,IAAV,yFAAGL,CAAH,0GAchBM,E,gLACJC,OAAA,WAAU,IAAD,EAEDC,EADcC,IAAIC,KAAM,+CACA,GAC9BC,QAAQC,IAAIJ,GAGZ,IAAMK,EAAW,CAAEC,OAAQN,EAAUO,eAAeC,WAEpD,OACE,kBAAC,IAAD,CAAQC,gBAAgB,EAAMC,sBAAsB,EAAOC,oBAAoB,GAE3E,kBAAC,MAAD,GAAMC,WAAS,EACXC,QAAS,IADb,QAEa,EAFb,EAGIC,QAAQ,aAHZ,EAIIC,MAAOrB,EAJX,GAKI,kBAAC,IAAD,CAAMsB,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIH,MAAOrB,GAC/B,yBAAKqB,MAAO,CAACI,OAAQ,YAKxB,kBAAC,IAAD,CAAMH,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAIH,MAAOrB,GAC/B,yBAAKqB,MAAO,CAACK,MAAO,YAEvB,kBAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGH,MAAOrB,GAC7B,kBAAC,IAAD,CAAe2B,MAAOA,KAChB,kBAAC9B,EAAD,CAAkB+B,QAAQ,MAAMtB,EAAUuB,kBAE1C,kBAAC3B,EAAD,CAAkBmB,MAAO,CAACK,MAAM,QAASI,wBAAyBnB,MAG5E,kBAAC,IAAD,CAAMW,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAIH,MAAOrB,GAC9B,yBAAKqB,MAAO,CAACK,MAAO,YAKxB,kBAAC,IAAD,CAAMJ,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAKH,MAAOrB,GAC/B,yBAAKqB,MAAO,CAACI,OAAQ,e,GAxCLM,IAAMC,WAgDzB5B,YAER,IAAM6B,EAAS","file":"component---src-pages-accessibility-policy-js-413a1b5dca7d6545a5fe.js","sourcesContent":["import React from 'react'\nimport get from 'lodash/get'\nimport Layout from '../components/layout'\nimport { Link } from \"gatsby\"\nimport { graphql } from 'gatsby' \nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles'\nimport { ThemeProvider, Typography } from '@material-ui/core';\nimport theme from '../theme'\nimport styled from 'styled-components'\nimport SlideDrawer from '../components/SideDrawer'\nimport Grid from '@material-ui/core/Grid'\n\nconst StyledTypography = styled(Typography)`\n    margin-bottom: 3rem;\n`\n\nconst gridStyle = {border: '0px solid red'}\n\nconst AccessPolicyBody = styled.div`\n& li {\n     font-size: 1rem;\n     font-weight: 400;\n}\n& li span{\n     font-size: 1rem;\n     font-weight: 400;\n}\n& ul {\n     font-size: 1rem;\n}\n`\n\nclass AccessibilityPolicy extends React.Component {\n  render() {\n    const resourcesAr = get(this, 'props.data.allNodeAccessibilitypolicy.nodes')\n    const resources = resourcesAr[0]\n    console.log(resources)\n    //console.log(resources.allResourcesJson)\n\n    const bodyHtml = { __html: resources.field_bodytext.processed }\n\n    return (\n      <Layout scrollablePage={true} showPercentIndicator={false} showBurgerMenuIcon={true}>\n          \n          <Grid container  \n              spacing={0} \n              spacing={0} \n              justify=\"flex-start\" \n              style={gridStyle}>\n              <Grid item xs={12} sm={12} style={gridStyle}>\n                 <div style={{height: '100px'}}></div>\n              </Grid>\n\n\n\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                 <div style={{width: '100px'}}></div>\n              </Grid>\n              <Grid item xs={12} sm={8} style={gridStyle}>\n                  <ThemeProvider theme={theme}>\n                        <StyledTypography variant=\"h1\">{resources.field_headertext}</StyledTypography>\n                       \n                        <AccessPolicyBody style={{width:'100%'}} dangerouslySetInnerHTML={bodyHtml}></AccessPolicyBody>\n                   </ThemeProvider>\n              </Grid>\n              <Grid item xs={12} sm={2}  style={gridStyle}>\n                  <div style={{width: '100px'}}></div>\n              </Grid>\n\n\n\n              <Grid item xs={12} sm={12}  style={gridStyle}>\n                  <div style={{height: '100px'}}></div>\n              </Grid>\n          </Grid>\n        </Layout>\n    )\n  }\n}\n\nexport default AccessibilityPolicy\n\nexport const pageQuery = graphql`{\n       allNodeAccessibilitypolicy {\n    nodes {\n      field_bodytext {\n        processed\n      }\n      field_headertext\n    }\n  }\n}`"],"sourceRoot":""}