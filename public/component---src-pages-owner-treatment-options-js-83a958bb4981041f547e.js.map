{"version":3,"sources":["webpack:///./src/pages/owner-treatment-options.js"],"names":["OwnerTreatmentOptions","data","console","log","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","initialState","step","ownerTreatmentSteps","SECTION_INTRO","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","resourcesIntroAr","resourcesOwnerQuestionAr","resourcesAnswersAr","id","headerText","setCurrentStep","useEffect","CORRECT_ANSWER","newCaseStudyProgress","setCaseStudyProgress","tasks","REASSURING_OWNER","path","getSlideData","ownerTreatmentOptionsSlugNames","QUESTION_POSED_BY_OWNER","QUESTION_POSED_BY_OWNER_DUDLEY","REGGIE","QUESTION_POSED_BY_OWNER_REGGIE","POPPY","QUESTION_POSED_BY_OWNER_POPPY","animationVideoName","getOwnerVideo","QUESTION_POSED","QUESTION_POSED_DUDLEY","QUESTION_POSED_REGGIE","QUESTION_POSED_POPPY","correctAnswerStep","incorrectAnswerStep","INCORRECT_ANSWER","processField","field_topheadertext","videoCorrectAnswer","getVideoData","ownerResponse_CorrectAnswer","answerHeader","field_answerheader","answerText","field_answertext","additionalText","field_additionalbodytext","isCorrectAnswer","field_iscorrectanswer","mainImage","getDogImageName","animationCharacterState","HAPPY","slugName","continueLink","uri","title","url","backLink","accessibilityVideoText","buttonLinks","updateSlideDataWithVideoData","videoIncorrectAnswer","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","ownerResponse_InCorrectAnswer","SAD","showSliderHeader","style","display","e","pageQuery"],"mappings":"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","file":"component---src-pages-owner-treatment-options-js-83a958bb4981041f547e.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerTreatmentSteps, cookieKeyNames, tasks, ownerTreatmentOptionsSlugNames, legacyButtonTypes, animationCharacterState, ownerTreatmentSlugNames } from \"../WebsiteConstants\"\nimport { processInternalLink, stripUneededHtml, removeParagraphsTags, getSlideData, processField } from '../utils/displayUtils'\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport { setCaseStudyProgress, getVideoData, updateSlideDataWithVideoData } from \"../utils/dataUtils\"\nimport { getDogImageName, getOwnerVideo } from \"../utils/assetUtils\"\n\nconst OwnerTreatmentOptions = ({data}) => {\n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n        let initialState = { \n            step: ownerTreatmentSteps.SECTION_INTRO, \n        }\n\n        /* ===== CONSTANTS ==== */\n\n        const buttonIds = {\n          INCORRECT_ANSWER: \"ownertreatmentincorrect1\",\n          QUESTION_POSED: \"ownertreatmentquestionposed1\"\n        }\n    \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        const resourcesIntroAr = get(data, 'allNodeSectionintroduction.nodes')\n        const resourcesOwnerQuestionAr = get(data, 'allNodeOwnerquestion.nodes')\n        const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n        \n        const id = \"ownerResponsePage\"\n        const style = {}\n\n        let headerText = ''\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        const tryAgain = (e) => {\n            setCurrentStep(ownerTreatmentSteps.QUESTION_POSED)\n        }\n\n        // =================== CHECK COMPLETION STATUS ==================\n\n        useEffect(() => {\n          if (state.step === ownerTreatmentSteps.CORRECT_ANSWER) { \n            const newCaseStudyProgress = setCaseStudyProgress(tasks.REASSURING_OWNER,dogChoice,cookies)\n            console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n            setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,{ path: '/' })  \n          } \n        },[state.step])\n\n        switch (state.step) {\n          case ownerTreatmentSteps.SECTION_INTRO:\n            resources = getSlideData(resourcesIntroAr,ownerTreatmentOptionsSlugNames.SECTION_INTRO)\n            \n            break\n          case ownerTreatmentSteps.QUESTION_POSED_BY_OWNER:\n              if (dogChoice === dogName.DUDLEY) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_DUDLEY)}\n              if (dogChoice === dogName.REGGIE) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_REGGIE)}\n              if (dogChoice === dogName.POPPY) {resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_BY_OWNER_POPPY)}\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              \n            break\n          case ownerTreatmentSteps.QUESTION_POSED:\n              if (dogChoice === dogName.DUDLEY) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_DUDLEY)}\n              if (dogChoice === dogName.REGGIE) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_REGGIE)}\n              if (dogChoice === dogName.POPPY) {resources = getSlideData(resourcesAr,ownerTreatmentOptionsSlugNames.QUESTION_POSED_POPPY)}\n\n              resources.correctAnswerStep = ownerTreatmentSteps.CORRECT_ANSWER\n              resources.incorrectAnswerStep = ownerTreatmentSteps.INCORRECT_ANSWER\n              resources.animationVideoName = getOwnerVideo(dogChoice)\n              \n            break\n            case ownerTreatmentSteps.CORRECT_ANSWER:\n        \n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentOptionsSlugNames.CORRECT_ANSWER)\n\n              headerText = processField(resources.field_topheadertext,dogChoice,false)\n               \n              let videoCorrectAnswer = getVideoData(resources,dogChoice)\n\n              let ownerResponse_CorrectAnswer = {\n  \n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.HAPPY,dogChoice),\n                  slugName: ownerTreatmentOptionsSlugNames.CORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/certificate-request'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: [],\n                  dogChoice:dogChoice,\n              }\n        \n              resources = updateSlideDataWithVideoData(ownerResponse_CorrectAnswer,videoCorrectAnswer) \n              console.log(resources)\n            break\n            case ownerTreatmentSteps.INCORRECT_ANSWER:\n           \n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentOptionsSlugNames.INCORRECT_ANSWER)\n\n              headerText = processField(resources.field_topheadertext,dogChoice,false)\n\n              let videoIncorrectAnswer = getVideoData(resources,dogChoice)\n\n              const buttonLinks = [{}]\n\n              buttonLinks[0].id = buttonIds.QUESTION_POSED\n              buttonLinks[0].title = \"Try again\"\n              buttonLinks[0].url = \"/\"\n              buttonLinks[0].onClickHandler = () => { setCurrentStep(ownerTreatmentSteps.QUESTION_POSED) }\n              buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n              let ownerResponse_InCorrectAnswer = {\n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.SAD,dogChoice),\n                  slugName: ownerTreatmentOptionsSlugNames.INCORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: buttonLinks,\n                  dogChoice: dogChoice,\n              }\n\n              resources = updateSlideDataWithVideoData(ownerResponse_InCorrectAnswer,videoIncorrectAnswer)  \n              console.log(resources)\n            break\n          default:\n            return \"no current slide\"\n        }\n        \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n \n    return (\n        <Layout headerText={headerText} showSliderHeader={true}>\n              { state.step === ownerTreatmentSteps.SECTION_INTRO ? <QuestionResPage step={ownerTreatmentSteps.SECTION_INTRO} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.QUESTION_POSED_BY_OWNER ? <QuestionResPage step={ownerTreatmentSteps.QUESTION_POSED_BY_OWNER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.QUESTION_POSED ? <QuestionResPage step={ownerTreatmentSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerTreatmentSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerTreatmentSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerTreatmentSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={tryAgain} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default OwnerTreatmentOptions\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n    allNodeSectionintroduction {\n      nodes {\n        field_headertext\n        path {\n          alias\n        }\n      }\n    }\n    allNodeOwnerquestion {\n      nodes {\n        field_headertext\n        field_additionalbodytext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n    nodes {\n      drupal_id\n      created(fromNow: false)\n      field_accessibilityvideotext\n      field_additionalbodytext {\n        processed\n      }\n      field_animationvideoname\n      field_answerheader\n      field_answertext {\n        processed\n      }\n      field_buttonlinks {\n        title\n        uri\n      }\n      field_continuelink {\n        title\n        uri\n      }\n      field_iscorrectanswer\n      field_progresspercent\n      field_slugname\n      field_topheadertext {\n        processed\n      }\n      field_videocaptiontext1 {\n        processed\n      }\n      field_videoduration1\n      field_videonarrator1\n      field_videoposterimage1 {\n        width\n        alt\n        height\n        title\n      }\n      field_videothumbnail1 {\n        alt\n        height\n        title\n        width\n      }\n      path {\n        alias\n      }\n      field_videocaptiontext2 {\n        processed\n      }\n      field_videocaptiontext3 {\n        processed\n      }\n      field_videofordog1\n      field_videofordog2\n      field_videofordog3\n      field_videonarrator2\n      field_videonarrator3\n      field_videoposterimage2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videoposterimage3 {\n        alt\n        height\n        title\n        width\n      }\n      field_videothumbnail2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videotitle1 {\n        processed\n      }\n      field_videotitle2 {\n        processed\n      }\n      field_videotitle3 {\n        processed\n      }\n      relationships {\n        field_video1 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n                internal {\n                  content\n                  description\n                  ignoreType\n                  mediaType\n                }\n              }\n              filesize\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n        field_video2 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n        field_videoposterimage1 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage2 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage3 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail1 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail2 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail3 {\n          localFile {\n            url\n          }\n        }\n        field_video3 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n      }\n      field_videonarratorlocation1 {\n        processed\n      }\n      field_videonarratorlocation2 {\n        processed\n      }\n      field_videonarratorlocation3 {\n        processed\n      }\n      field_videonarratorprofession1 {\n        processed\n      }\n      field_videonarratorprofession2 {\n        processed\n      }\n      field_videonarratorprofession3 {\n        processed\n      }\n      field_videoduration3\n      field_videoduration2\n      field_videothumbnail3 {\n        alt\n        height\n        title\n        width\n      }\n    }\n  }\n  }\n  `\n\n"],"sourceRoot":""}