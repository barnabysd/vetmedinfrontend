{"version":3,"sources":["webpack:///./src/pages/murmur-treatment.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","MurmurTreatmentQuestionResponseLayout","type","slideTypes","QUESTION_POSED","resources","navigationLeftHandler","navigationRightHandler","dogChoice","buttonLinks","field_buttonlinks","length","currentCaseStudySlideData","ANSWER_WITH_VIDEO","ANSWER_NO_VIDEO","isCorrectAnswer","field_iscorrectanswer","id","treatmentApproachSteps","title","url","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","useVideoWidget","answerHeader","replaceDogName","removeParagraphsTags","field_answerheader","answerText","field_answertext","processed","additionalText","field_additionalbodytext","videoText1","field_videocaptiontext1","CORRECT_ANSWER_XRAY_ONLY","CORRECT_ANSWER_ULTRASOUND","INCORRECT_ANSWER_ECG","CORRECT_ANSWER_XRAY_AND_ULTRASOUND","INCORRECT_ANSWER_NO_TREATMENT","INCORRECT_ANSWER_HOLTER_MONITORING","questionText","field_questiontext","headerText","ref","React","createRef","container","justify","style","border","item","xs","sm","align","autoPlay","currentSlidePosition","MurmurTreatment","data","useCookies","cookies","setCookie","dogName","DUDLEY","initialState","step","useState","state","setState","tasks","DUDLEY_GRADE_HEART_MURMUR","resourcesAr","get","resourcesAnswersAr","getSlideData","murmurTreatmentResourcesSlugNames","console","log","setCurrentStep","tryAgain","e","handleLeftClick","handleRightClick","showPercentIndicator","to","distanceFromSide","bottom","direction","bottomNavigationLinkDirection","FORWARD","linkText","className","position","zIndex","currentTarget","pageQuery"],"mappings":"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","file":"component---src-pages-murmur-treatment-js-b7152df600b291e4796e.js","sourcesContent":["import React, {useState} from \"react\"\nimport Layout from '../components/layout'\nimport theme from \"../theme\"\n// import ReactPlayer from \"react-player\"\nimport \"./slideSection.css\"\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport CaseStudyLeftArrow from \"../components/CaseStudyLeftArrow\"\nimport CaseStudyRightArrow from \"../components/CaseStudyRightArrow\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResponse from \"../components/QuestionResponse\"\nimport QuestionPosed from \"../components/QuestionPosed\"\nimport ResponseVideo from \"../components/ResponseVideo\"\n\nimport BottomNavigationLink from \"../components/BottomNavigationLink\"\n\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport { processHtml, getSlideData, replaceDogName, removeParagraphsTags } from \"../utils/displayUtils\"\nimport { dogName, \n  ownerName, \n  ownerResponseSteps, \n  cookieKeyNames, \n  tasks, \n  slideTypes,\n  murmurTreatmentResourcesSlugNames,\n  bottomNavigationLinkDirection,\n  treatmentApproachSteps,\n  legacyButtonTypes\n} from \"../WebsiteConstants\"\nimport FixedSizeVideoWidget from \"../components/FixedSizeVideoWidget\"\n\n//NB: - useEffect(() - very good reference https://dev.to/spukas/4-ways-to-useeffect-pf6\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n}));\n\nfunction MurmurTreatment({data}) {\n\n   // =================== GET GLOBAL DATA ==================\n\n  const [cookies, setCookie, removeCookie] = useCookies(['hasConsentSet','userChoice','dogChoice','score']);\n  const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"] : dogName.DUDLEY\n\n  // =================== SETUP STATE ==================\n\n  const initialState = { step: treatmentApproachSteps.QUESTION_POSED }\n  const [state, setState] = useState(initialState)\n\n// =================== CHECK COMPLETION STATUS ==================\n\nif (state.step === treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY\n  || state.step === treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND\n  || state.step === treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND) { \n    setCookie(tasks.DUDLEY_GRADE_HEART_MURMUR,true,\"/\")\n}  \n\n  // =================== GET PAGES DATA ==================\n\n  const resourcesAr = get(data, 'allNodeQuestion.nodes')\n  const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n\n  let resources = null\n        \n  switch (state.step) {\n      case treatmentApproachSteps.QUESTION_POSED:\n        resources = getSlideData(resourcesAr,murmurTreatmentResourcesSlugNames.QUESTION_POSED)\n        break\n      case treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_XRAY_ONLY)\n      case treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_XRAY_AND_ULTRASOUND)\n        break\n      case treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.CORRECT_ANSWER_ULTRASOUND)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_ECG:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_ECG)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_NO_TREATMENT)\n        break\n      case treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING:\n        resources = getSlideData(resourcesAnswersAr,murmurTreatmentResourcesSlugNames.INCORRECT_ANSWER_HOLTER_MONITORING)\n        break\n    default:\n      return \"no current slide\"\n  }\n  console.log(\"=========== current Step - step \",state.step)\n  console.log(resources)\n  if (!resources) return \"resources not found\"\n  if (resources == \"NO_DATA_FOUND\") return \"resources not found\"\n\n  // =================== NAVIGATION  ==================\n\n  const setCurrentStep = (step) => {   \n    console.log(\"=========== setCurrentStep - step \",step)\n    setState({...state, step: step})\n  }\n\n  const tryAgain = (e) => {\n    setState({...state, step: treatmentApproachSteps.QUESTION_POSED})\n  }\n\n  const answerSelected = (e) => {\n    if (e.currentTarget.id) {\n      switch (e.currentTarget.id) {\n          case (treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND)\n          break\n          case (treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND)\n          break\n          case (treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY):\n                setCurrentStep(treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_ECG):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_ECG)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT)\n          break\n          case (treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING):\n                setCurrentStep(treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING)\n          break\n          default:\n              console.log(\"no matching id on question button\")\n              setCurrentStep(treatmentApproachSteps.QUESTION_POSED)\n      }\n    } else {\n      console.log(\"no id on question button\")\n      setCurrentStep(treatmentApproachSteps.QUESTION_POSED)\n    }\n    \n  }\n\n  const handleLeftClick = (e) => {\n      console.log(\"handleLeftClick\")\n  }\n\n  const handleRightClick = (e) => {\n      console.log(\"handleRightClick\")\n  }\n\n  return (\n    <Layout headerText={replaceDogName(\"Poppy has a grade 3 mitral valve murmur; how would you like to proceed?\"),dogChoice} showPercentIndicator={true}>\n\n     {((treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND === state.step \n     || treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND === state.step \n     || treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY === state.step)) ?\n      <BottomNavigationLink to={\"/owner-response\"}\n                  distanceFromSide={\"2%\"}\n                  bottom={\"2%\"}\n                  direction={bottomNavigationLinkDirection.FORWARD}\n                  linkText={\"Continue\"}\n      /> : '' }\n\n      <div className={(useStyles()).root} style={{position: 'relative', zIndex:'1 !important'}}>\n\n           { (treatmentApproachSteps.QUESTION_POSED  === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.QUESTION_POSED} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={answerSelected} /> : '' }\n           \n           { (treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           { (treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           { (treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n           \n           { (treatmentApproachSteps.INCORRECT_ANSWER_ECG === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n           { (treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n           { (treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING === state.step) ? \n           <MurmurTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n     \n      </div>\n  </Layout>\n\n)}\n\nconst MurmurTreatmentQuestionResponseLayout = ({type = slideTypes.QUESTION_POSED, resources, navigationLeftHandler, navigationRightHandler, dogChoice }) => {\n  //debugger\n  let buttonLinks = []\n  if (resources.field_buttonlinks && resources.field_buttonlinks.length > 0) {\n     // this get over ridden\n     buttonLinks = resources.field_buttonlinks\n  }\n\n  let currentCaseStudySlideData = {}\n  switch (type) {\n      case slideTypes.ANSWER_WITH_VIDEO:\n      case slideTypes.ANSWER_NO_VIDEO:\n\n                const isCorrectAnswer = resources.field_iscorrectanswer[0] === \"yes\" ? true : false\n\n                buttonLinks = [{}]\n\n                if (isCorrectAnswer === false) {\n\n                    buttonLinks[0].id = treatmentApproachSteps.QUESTION_POSED\n                    buttonLinks[0].title = \"Try again\"\n                    buttonLinks[0].url = \"/\"\n                    buttonLinks[0].onClickHandler = navigationRightHandler\n                    buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n                }\n\n                //debugger\n\n                // =========== NORMALISE DRUPAL DATA ========\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: isCorrectAnswer,\n                    isCorrectAnswer: resources.field_iscorrectanswer[0],\n                    answerHeader: replaceDogName(removeParagraphsTags(resources.field_answerheader ? resources.field_answerheader : '', dogChoice)),\n                    answerText: replaceDogName(removeParagraphsTags(resources.field_answertext ? resources.field_answertext.processed : '', dogChoice)), \n                    additionalText: replaceDogName(removeParagraphsTags(resources.field_additionalbodytext ? resources.field_additionalbodytext.processed : '', dogChoice)), \n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks,\n                }\n           break\n      case slideTypes.QUESTION_POSED:\n                // =========== NORMALISE DRUPAL DATA ========\n\n                buttonLinks = [{},{},{},{},{},{}]\n\n                buttonLinks[0].id = treatmentApproachSteps.CORRECT_ANSWER_XRAY_ONLY\n                buttonLinks[0].title = \"X-ray\"\n                buttonLinks[0].url = \"/\"\n\n                buttonLinks[1].id = treatmentApproachSteps.CORRECT_ANSWER_ULTRASOUND\n                buttonLinks[1].title = \"Ultrasound\"\n                buttonLinks[1].url = \"/\"\n\n                buttonLinks[2].id = treatmentApproachSteps.INCORRECT_ANSWER_ECG\n                buttonLinks[2].title = \"ECG\"\n                buttonLinks[2].url = \"/\"\n\n                buttonLinks[3].id = treatmentApproachSteps.CORRECT_ANSWER_XRAY_AND_ULTRASOUND\n                buttonLinks[3].title = \"X-ray and ultrasound\"\n                buttonLinks[3].url = \"/\"\n\n                buttonLinks[4].id = treatmentApproachSteps.INCORRECT_ANSWER_NO_TREATMENT\n                buttonLinks[4].title = \"Finish Appointment\"\n                buttonLinks[4].url = \"/\"\n\n                buttonLinks[5].id = treatmentApproachSteps.INCORRECT_ANSWER_HOLTER_MONITORING\n                buttonLinks[5].title = \"Holter monitoring\"\n                buttonLinks[5].url = \"/\"\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: false,\n                    questionText: resources.field_questiontext,\n                    headerText: resources.field_questiontext,\n                    additionalText: resources.field_additionalbodytext,\n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks\n                }\n          break\n    default:\n         return \"type not found\"\n  }\n\n  const ref = React.createRef();\n\n  return (\n    <section>\n   \n    <Grid container  \n    spacing={0} \n    spacing={0} \n    justify=\"center\" \n    style={{border: '0px solid black'}}>\n   \n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n      <Grid item xs={12} sm={5}  align=\"center\" style={{border: '0px solid red'}}>\n       \n          <FixedSizeVideoWidget autoPlay=\"true\" ref={ref} currentCaseStudySlideData={currentCaseStudySlideData} /> \n       \n      </Grid>\n\n      <Grid item xs={12} sm={5}  align=\"left\" style={{ border: '0px solid red' }}>\n        {(type === slideTypes.QUESTION_POSED) ?\n          <QuestionPosed currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationRightHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> : ''\n        }\n\n        {(type === slideTypes.ANSWER_WITH_VIDEO || type === slideTypes.ANSWER_NO_VIDEO) ?\n          <QuestionResponse currentCaseStudySlideData={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationLeftHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> :''\n        }\n            \n      </Grid>\n\n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n    </Grid>\n    </section>\n  )\n}\n\nexport default MurmurTreatment\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optioniscorrect5\n        field_optioniscorrect6\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsbodytext5 {\n          processed\n        }\n        field_optionsbodytext6 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_answerheader\n        field_answertext {\n          processed\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_iscorrectanswer\n        field_progresspercent\n        field_slugname\n        field_topheadertext {\n          processed\n        }\n        field_videocaptiontext1 {\n          processed\n        }\n        field_videoduration1\n        field_videonarrator1\n        field_videotext1 {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n  }\n  `\n\n\n\n"],"sourceRoot":""}