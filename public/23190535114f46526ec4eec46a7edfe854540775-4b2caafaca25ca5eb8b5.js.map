{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js"],"names":["Layout","children","theme","palette","background","lightBlue","className","SvgIcon","props","ref","classes","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","root","concat","focusable","undefined","role","muiName","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","Button","_props$disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","colorInherit","focusRipple","focusVisible","label","button","boxSizing","minWidth","padding","borderRadius","shape","text","short","textDecoration","backgroundColor","hoverOpacity","alignItems","justifyContent","textPrimary","textSecondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge"],"mappings":"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","file":"23190535114f46526ec4eec46a7edfe854540775-4b2caafaca25ca5eb8b5.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\n//import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport React, { useLayoutEffect, useState } from 'react'\nimport { CookiesProvider } from 'react-cookie';\n\nimport Header from \"./header\"\nimport \"./layout.css\"\nimport styled, { css, keyframes } from 'styled-components'\nimport theme, { sm, md, lg, xl } from '../theme'\n\n// function useWindowSize() {\n//   const [size, setSize] = useState([0, 0])\n//   useLayoutEffect(() => {\n//     function updateSize() {\n//       setSize([window.innerWidth, window.innerHeight])\n//     }\n//     window.addEventListener('resize', updateSize)\n//     updateSize();\n//     return () => window.removeEventListener('resize', updateSize)\n//   }, [])\n//   return size\n// }\n\n// function ShowWindowDimensions(props) {\n//   const [width, height] = useWindowSize();\n//   return <span>Window size: {width} x {height}</span>;\n// }\n\nconst Layout = ({ children }) => {\n // const [width, height] = useWindowSize();\n\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  const layoutStyle = { backgroundColor:theme.palette.background.lightBlue,\n     minWidth:'100%',\n     height:'100vh',\n     minHeight:'100vh',\n     border: '0px solid yellow',\n     overflow:'hidden'\n  }\n   \n  //TODO: - figure out what to do here - can't use at top level without breaking lower level styled comp \n  // const AllLayout = styled.div`\n      // minWidth:100%;\n      // height:100vh;\n      // minHeight:100vh;\n      // border: 0px solid yellow;\n      // overflow:hidden;\n  //     @media (max-width: ${sm}px) {\n  //       overflow:auto;\n  //       height:auto;\n  //     }\n  // `\n\n  return (\n    <>\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\n      <CookiesProvider>\n      <div className=\"pageContainer\">\n\n        <main>{children}</main>\n      \n      </div>\n      </CookiesProvider>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'default' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : 'true',\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: PropTypes.oneOf(['default', 'inherit', 'large', 'small']),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);"],"sourceRoot":""}