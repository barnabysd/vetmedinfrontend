{"version":3,"sources":["webpack:///./src/pages/owner-treatment-options.js"],"names":["OwnerTreatmentOptions","data","console","log","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","initialState","step","ownerResponseSteps","SECTION_INTRO","useState","state","setState","resources","dogChoice","dogName","DUDLEY","resourcesAr","get","resourcesIntroAr","resourcesOwnerQuestionAr","id","setCurrentStep","useEffect","CORRECT_ANSWER","newCaseStudyProgress","setCaseStudyProgress","tasks","REASSURING_OWNER","path","ownerTreatmentSlugNames","getSlideData","QUESTION_POSED_BY_OWNER","QUESTION_POSED","resourcesAnswersAr","videoCorrectAnswer","getVideoData","ownerResponse_CorrectAnswer","answerHeader","field_answerheader","processField","answerText","field_answertext","additionalText","field_additionalbodytext","isCorrectAnswer","field_iscorrectanswer","mainImage","getDogImageName","animationCharacterState","HAPPY","slugName","continueLink","uri","title","url","backLink","accessibilityVideoText","buttonLinks","updateSlideDataWithVideoData","INCORRECT_ANSWER","videoIncorrectAnswer","buttonIds","onClickHandler","buttonType","legacyButtonTypes","DARK_BLUE_ROUNDED","ownerResponse_InCorrectAnswer","style","display","e","pageQuery"],"mappings":"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","file":"component---src-pages-owner-treatment-options-js-97b1635e74ce43023755.js","sourcesContent":["import React, { useRef,useState, useEffect, createRef } from \"react\"\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\nimport theme, { sm, md, lg, xl } from \"../theme\"\nimport { dogName, ownerName, ownerResponseSteps, cookieKeyNames, tasks } from \"../WebsiteConstants\"\nimport { processInternalLink, stripUneededHtml, removeParagraphsTags, getSlideData, processField } from '../utils/displayUtils'\nimport { useCookies } from 'react-cookie'\nimport QuestionResPage from '../components/OwnerResPage'\nimport Layout from '../components/layout'\nimport slides, {ownerTreatment_CorrectAnswer,ownerTreatment_InCorrectAnswer} from \"../api/slideData\"\nimport { setCaseStudyProgress, getVideoData, updateSlideDataWithVideoData } from \"../utils/dataUtils\"\nimport { getDogImageName } from \"../utils/assetUtils\"\n\nconst OwnerTreatmentOptions = ({data}) => {\n        console.log(data)\n        const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n        let initialState = { \n            step: ownerResponseSteps.SECTION_INTRO, \n        }\n    \n        const [state, setState] = useState(initialState)\n        console.log(\"=========== step \",state.step)\n        console.log(\"state\", state)\n        const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"]: dogName.DUDLEY \n        let resources\n        const resourcesAr = get(data, 'allNodeQuestion.nodes')\n        const resourcesIntroAr = get(data, 'allNodeSectionintroduction.nodes')\n        const resourcesOwnerQuestionAr = get(data, 'allNodeOwnerquestion.nodes')\n        const resourcesAnswerAr = get(data, 'allNodeAnswer.nodes')\n        \n        const id = \"ownerResponsePage\"\n        const style = {}\n\n        const setCurrentStep = (step) => {   \n            console.log(\"=========== setCurrentStep - step\",step)\n            // console.log(\"state\", state)\n            setState({...state, step: step})\n        }\n\n        const tryAgain = (e) => {\n            setCurrentStep(ownerResponseSteps.QUESTION_POSED)\n        }\n\n        // =================== CHECK COMPLETION STATUS ==================\n\n        useEffect(() => {\n          if (state.step === ownerResponseSteps.CORRECT_ANSWER) { \n            const newCaseStudyProgress = setCaseStudyProgress(tasks.REASSURING_OWNER,dogChoice,cookies)\n            console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n            setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,{ path: '/' })  \n          } \n        },[state.step])\n\n        const ownerTreatmentSlugNames = {\n          SECTION_INTRO:\"treatment-options-section-main-introduction\",\n          QUESTION_POSED_BY_OWNER:\"owner-question-is-dudley-ok\",\n          QUESTION_POSED:\"owner-treatment-options\",\n          CORRECT_ANSWER:\"nnnnnnnnnnnn\",\n          INCORRECT_ANSWER:\"nnnnnnnnnnnn\",\n\n        }\n    \n        // TODO - make this logical question posed by user is from treatment-options-section-introduction\n        switch (state.step) {\n          case ownerResponseSteps.SECTION_INTRO:\n            resources = getSlideData(resourcesIntroAr,ownerTreatmentSlugNames.SECTION_INTRO)\n            break\n          case ownerResponseSteps.QUESTION_POSED_BY_OWNER:\n              resources = getSlideData(resourcesOwnerQuestionAr,ownerTreatmentSlugNames.QUESTION_POSED_BY_OWNER)\n            break\n          case ownerResponseSteps.QUESTION_POSED:\n              resources = getSlideData(resourcesAr,ownerTreatmentSlugNames.QUESTION_POSED)\n            break\n            case ownerResponseSteps.CORRECT_ANSWER:\n                //TODO - dynamic\n              //resources = getSlideData(resourcesAr,\"/owner-treatment-answer-concise-language\")\n              //resources = ownerTreatment_CorrectAnswer\n\n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentSlugNames.CORRECT_ANSWER)\n\n              let videoCorrectAnswer = getVideoData(resources,dogChoice)\n\n              let ownerResponse_CorrectAnswer = {\n  \n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.HAPPY,dogChoice),\n                  slugName: ownerTreatmentSlugNames.CORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/xray'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: [],\n                  dogChoice:dogChoice,\n              }\n        \n              resources = updateSlideDataWithVideoData(ownerResponse_CorrectAnswer,videoCorrectAnswer) \n              console.log(resources)\n            break\n            case ownerResponseSteps.INCORRECT_ANSWER:\n              //resources = getSlideData(resourcesAr,\"/owner-treatment-answer-incorrect\")\n              //resources = ownerTreatment_InCorrectAnswer\n\n              resources = getSlideData(resourcesAnswersAr, ownerTreatmentSlugNames.INCORRECT_ANSWER)\n\n              let videoIncorrectAnswer = getVideoData(resources,dogChoice)\n\n              const buttonLinks = [{}]\n\n              buttonLinks[0].id = buttonIds.QUESTION_POSED\n              buttonLinks[0].title = \"Try again\"\n              buttonLinks[0].url = \"/\"\n              buttonLinks[0].onClickHandler = () => { setCurrentStep(ownerResponseSteps.QUESTION_POSED) }\n              buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n              let ownerResponse_InCorrectAnswer = {\n                  answerHeader: resources.field_answerheader ? processField(resources.field_answerheader,dogChoice,false) : '',\n                  answerText: resources.field_answertext ? processField(resources.field_answertext,dogChoice,true) : '',\n                  additionalText: resources.field_additionalbodytext ? processField(resources.field_additionalbodytext,dogChoice,true) : '',\n                  isCorrectAnswer: resources.field_iscorrectanswer[0],\n                  mainImage: getDogImageName(animationCharacterState.HAPPY,dogChoice),\n                  slugName: ownerTreatmentSlugNames.INCORRECT_ANSWER,\n                  continueLink: {uri: '/',title:'Continue',url:'/'},\n                  backLink: {uri: '/',title:'Back',url:'/'},\n                  accessibilityVideoText: '',\n                  buttonLinks: buttonLinks,\n                  dogChoice: dogChoice,\n              }\n\n              resources = updateSlideDataWithVideoData(ownerResponse_InCorrectAnswer,videoIncorrectAnswer)  \n              console.log(resources)\n            break\n          default:\n            return \"no current slide\"\n        }\n        \n        console.log(resources)\n        if (!resources) return \"resources not found\"\n        \n    return (\n        <Layout>\n              { state.step === ownerResponseSteps.SECTION_INTRO ? <QuestionResPage step={ownerResponseSteps.SECTION_INTRO} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.QUESTION_POSED_BY_OWNER ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED_BY_OWNER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.QUESTION_POSED ? <QuestionResPage step={ownerResponseSteps.QUESTION_POSED} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep } resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.CORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.CORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={setCurrentStep} resources={resources} /> : ''}\n              { state.step === ownerResponseSteps.INCORRECT_ANSWER ? <QuestionResPage step={ownerResponseSteps.INCORRECT_ANSWER} id={id} style={{display: 'flex'}} dogChoice={dogChoice} setCurrentStep={tryAgain} resources={resources} /> : ''}\n        </Layout>\n    )\n}\n\nexport default OwnerTreatmentOptions\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_dogchoice\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n        drupal_id\n        changed(fromNow: false)\n      }\n    }\n    allNodeSectionintroduction {\n      nodes {\n        field_headertext\n        path {\n          alias\n        }\n      }\n    }\n    allNodeOwnerquestion {\n      nodes {\n        field_headertext\n        field_additionalbodytext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n    nodes {\n      drupal_id\n      created(fromNow: false)\n      field_accessibilityvideotext\n      field_additionalbodytext {\n        processed\n      }\n      field_animationvideoname\n      field_answerheader\n      field_answertext {\n        processed\n      }\n      field_buttonlinks {\n        title\n        uri\n      }\n      field_continuelink {\n        title\n        uri\n      }\n      field_iscorrectanswer\n      field_progresspercent\n      field_slugname\n      field_topheadertext {\n        processed\n      }\n      field_videocaptiontext1 {\n        processed\n      }\n      field_videoduration1\n      field_videonarrator1\n      field_videoposterimage1 {\n        width\n        alt\n        height\n        title\n      }\n      field_videothumbnail1 {\n        alt\n        height\n        title\n        width\n      }\n      path {\n        alias\n      }\n      field_videocaptiontext2 {\n        processed\n      }\n      field_videocaptiontext3 {\n        processed\n      }\n      field_videofordog1\n      field_videofordog2\n      field_videofordog3\n      field_videonarrator2\n      field_videonarrator3\n      field_videoposterimage2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videoposterimage3 {\n        alt\n        height\n        title\n        width\n      }\n      field_videothumbnail2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videotitle1 {\n        processed\n      }\n      field_videotitle2 {\n        processed\n      }\n      field_videotitle3 {\n        processed\n      }\n      relationships {\n        field_video1 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n                internal {\n                  content\n                  description\n                  ignoreType\n                  mediaType\n                }\n              }\n              filesize\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n        field_video2 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n        field_videoposterimage1 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage2 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage3 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail1 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail2 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail3 {\n          localFile {\n            url\n          }\n        }\n        field_video3 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n      }\n      field_videonarratorlocation1 {\n        processed\n      }\n      field_videonarratorlocation2 {\n        processed\n      }\n      field_videonarratorlocation3 {\n        processed\n      }\n      field_videonarratorprofession1 {\n        processed\n      }\n      field_videonarratorprofession2 {\n        processed\n      }\n      field_videonarratorprofession3 {\n        processed\n      }\n      field_videoduration3\n      field_videoduration2\n      field_videothumbnail3 {\n        alt\n        height\n        title\n        width\n      }\n    }\n  }\n  }\n  `\n\n"],"sourceRoot":""}