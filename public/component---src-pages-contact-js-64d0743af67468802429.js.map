{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/pages/contact.js","webpack:///./node_modules/@material-ui/core/esm/colors/blue.js"],"names":["Header","siteTitle","style","background","blue","marginBottom","defaultProps","Layout","children","data","site","siteMetadata","title","margin","maxWidth","padding","Contact","React","useState","state","setState","handleChange","e","target","name","value","to","method","action","data-netlify","data-netlify-honeypot","onSubmit","preventDefault","form","fetch","headers","body","getAttribute","Object","keys","map","key","encodeURIComponent","join","then","navigate","catch","error","alert","type","hidden","onChange","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700"],"mappings":"kLAKMA,EAAS,SAAC,GAAD,EAAGC,UAAH,OACb,4BACEC,MAAO,CACLC,WAAYC,IAAK,KACjBC,aAAa,cA6BnBL,EAAOM,aAAe,CACpBL,UAAU,IAGGD,Q,UCQAO,IApCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAAC,EAAD,CAAQR,UAAWQ,EAAKC,KAAKC,aAAaC,QAC1C,yBACEV,MAAO,CACLW,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOP,O,wNCVA,SAASQ,IAAW,IAAD,EACNC,IAAMC,SAAS,IAAlCC,EADyB,KAClBC,EADkB,KAG1BC,EAAe,SAACC,GAAO,IAAD,EAC1BF,EAAS,OAAD,wBAAMD,GAAN,WAAcG,EAAEC,OAAOC,MAAOF,EAAEC,OAAOE,MAAvC,MAkBV,OACE,kBAAC,IAAD,KACG,kBAAC,IAAD,CAAKb,MAAM,UACV,uCACA,kBAAC,OAAD,CAAMc,GAAG,KAAT,gBACF,0BACEF,KAAK,UACLG,OAAO,OACPC,OAAO,WACPC,eAAa,OACbC,wBAAsB,YACtBC,SA1Be,SAACT,GACpBA,EAAEU,iBACF,IAfYvB,EAeNwB,EAAOX,EAAEC,OACfW,MAAM,IAAK,CACTP,OAAQ,OACRQ,QAAS,CAAE,eAAgB,qCAC3BC,MAnBU3B,EAmBG,OAAD,QACV,YAAawB,EAAKI,aAAa,SAC5BlB,GApBFmB,OAAOC,KAAK9B,GAChB+B,KAAI,SAACC,GAAD,OAASC,mBAAmBD,GAAO,IAAMC,mBAAmBjC,EAAKgC,OACrEE,KAAK,QAqBHC,MAAK,kBAAMC,mBAASZ,EAAKI,aAAa,cACtCS,OAAM,SAACC,GAAD,OAAWC,MAAMD,QAiBtB,2BAAOE,KAAK,SAASzB,KAAK,YAAYC,MAAM,YAC5C,uBAAGyB,QAAM,GACP,uDACuB,2BAAO1B,KAAK,YAAY2B,SAAU9B,MAG3D,2BACE,4CAEE,6BACA,2BAAO4B,KAAK,OAAOzB,KAAK,OAAO2B,SAAU9B,MAG7C,2BACE,6CAEE,6BACA,2BAAO4B,KAAK,QAAQzB,KAAK,QAAQ2B,SAAU9B,MAG/C,2BACE,0CAEE,6BACA,8BAAUG,KAAK,UAAU2B,SAAU9B,MAGvC,2BACE,4BAAQ4B,KAAK,UAAb,a,oICzEK,IAhBJ,CACTG,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM","file":"component---src-pages-contact-js-64d0743af67468802429.js","sourcesContent":["import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { blue, purple } from '@material-ui/core/colors';\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: blue[600],\n      marginBottom: `1.45rem`,\n    }}\n  >\n    {/* <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div> */}\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata.title} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        {/* <footer>\n          © {new Date().getFullYear()}, \n          {` `}\n          <p>test</p>\n        </footer> */}\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","// import React from \"react\"\nimport { Link } from \"gatsby\"\n\n// import Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n// const Contact = () => (\n//     <Layout>\n//         <SEO title=\"About\" />\n//         <h1>Contact</h1>\n//         <Link to=\"/\">Back to home</Link>\n//     </Layout>\n// )\n\n// export default Contact;\nimport React from 'react'\nimport { navigate } from 'gatsby-link'\nimport Layout from '../components/layout'\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map((key) => encodeURIComponent(key) + '=' + encodeURIComponent(data[key]))\n    .join('&')\n}\n\nexport default function Contact() {\n  const [state, setState] = React.useState({})\n\n  const handleChange = (e) => {\n    setState({ ...state, [e.target.name]: e.target.value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const form = e.target\n    fetch('/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: encode({\n        'form-name': form.getAttribute('name'),\n        ...state,\n      }),\n    })\n      .then(() => navigate(form.getAttribute('action')))\n      .catch((error) => alert(error))\n  }\n\n  return (\n    <Layout>\n       <SEO title=\"About\" />\n        <h1>Contact</h1>\n        <Link to=\"/\">Back to home</Link>\n      <form\n        name=\"contact\"\n        method=\"post\"\n        action=\"/thanks/\"\n        data-netlify=\"true\"\n        data-netlify-honeypot=\"bot-field\"\n        onSubmit={handleSubmit}\n      >\n        {/* The `form-name` hidden field is required to support form submissions without JavaScript */}\n        <input type=\"hidden\" name=\"form-name\" value=\"contact\" />\n        <p hidden>\n          <label>\n            Don’t fill this out: <input name=\"bot-field\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Your name:\n            <br />\n            <input type=\"text\" name=\"name\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Your email:\n            <br />\n            <input type=\"email\" name=\"email\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <label>\n            Message:\n            <br />\n            <textarea name=\"message\" onChange={handleChange} />\n          </label>\n        </p>\n        <p>\n          <button type=\"submit\">Send</button>\n        </p>\n      </form>\n    </Layout>\n  )\n}","var blue = {\n  50: '#e3f2fd',\n  100: '#bbdefb',\n  200: '#90caf9',\n  300: '#64b5f6',\n  400: '#42a5f5',\n  500: '#2196f3',\n  600: '#1e88e5',\n  700: '#1976d2',\n  800: '#1565c0',\n  900: '#0d47a1',\n  A100: '#82b1ff',\n  A200: '#448aff',\n  A400: '#2979ff',\n  A700: '#2962ff'\n};\nexport default blue;"],"sourceRoot":""}