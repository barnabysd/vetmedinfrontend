{"version":3,"sources":["webpack:///./src/pages/which-treatment.js","webpack:///./src/components/BottomNavigationLink.js"],"names":["makeStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","NextSteps","data","useCookies","cookieKeyNames","DOG_CHOICE","CASESTUDYS_ALL","cookies","setCookie","dogChoice","dogName","DUDLEY","initialState","step","whichTreatmentSteps","QUESTION_POSED","useState","state","useEffect","CORRECT_VETMEDIN","newCaseStudyProgress","setCaseStudyProgress","tasks","WHICH_TREATMENT","console","log","path","resourcesAr","get","resourcesAnswersAr","resources","getSlideData","whichTreatmentSlugNames","INCORRECT_ANSWER_ACE","INCORRECT_ANSWER_SPIRO","INCORRECT_ANSWER_ALL_DIURETICS","headerText","replaceDogName","showPercentIndicator","to","distanceFromSide","bottom","direction","bottomNavigationLinkDirection","FORWARD","linkText","pageQuery","LinkHolder","styled","div","md","LinkHolderLeft","LinkHolderRight","BottomNavigationLink","onClick","style","right","display","flexDirection","alignItems","width","height","textDecoration","deminBlue","main","fontFamily","typography","fontWeight","typeOfButton","buttonStyleType","FORWARD_NORMAL_LINK","left","alignContent","BACK_NORMAL_LINK"],"mappings":"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","file":"component---src-pages-which-treatment-js-ad97eb86eb1767c93db0.js","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport Layout from '../components/layout'\nimport theme from \"../theme\"\n// import ReactPlayer from \"react-player\"\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Grid from '@material-ui/core/Grid'\n\nimport CaseStudyLeftArrow from \"../components/CaseStudyLeftArrow\"\nimport CaseStudyRightArrow from \"../components/CaseStudyRightArrow\"\nimport { useCookies } from 'react-cookie'\nimport QuestionResponse from \"../components/QuestionResponse\"\nimport QuestionPosed from \"../components/QuestionPosed\"\nimport ResponseVideo from \"../components/ResponseVideo\"\n\nimport BottomNavigationLink from \"../components/BottomNavigationLink\"\n\nimport get from \"lodash/get\"\nimport { graphql } from \"gatsby\"\nimport { stripUneededHtml, getSlideData, replaceDogName, removeParagraphsTags } from \"../utils/displayUtils\"\nimport { dogName, \n  ownerName, \n  ownerResponseSteps, \n  cookieKeyNames, \n  tasks, \n  slideTypes,\n  whichTreatmentSlugNames,\n  bottomNavigationLinkDirection,\n  whichTreatmentSteps,\n  legacyButtonTypes\n} from \"../WebsiteConstants\"\nimport FixedSizeVideoWidget from \"../components/FixedSizeVideoWidget\"\nimport { setCaseStudyProgress } from \"../utils/dataUtils\"\n\n//NB: - useEffect(() - very good reference https://dev.to/spukas/4-ways-to-useeffect-pf6\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n}));\n\nfunction NextSteps({data}) {\n\n   // =================== GET GLOBAL DATA ==================\n\n  const [cookies, setCookie, removeCookie] = useCookies([cookieKeyNames.DOG_CHOICE,cookieKeyNames.CASESTUDYS_ALL])\n  const dogChoice = cookies[\"dogChoice\"] ? cookies[\"dogChoice\"] : dogName.DUDLEY\n\n  // =================== SETUP STATE ==================\n\n  const initialState = { step: whichTreatmentSteps.QUESTION_POSED }\n  const [state, setState] = useState(initialState)\n\n  // =================== CHECK COMPLETION STATUS ==================\n\n  useEffect(() => {\n    if (state.step === whichTreatmentSteps.CORRECT_VETMEDIN) { \n        const newCaseStudyProgress = setCaseStudyProgress(tasks.WHICH_TREATMENT,dogChoice,cookies)\n        console.log(\"============= \" + newCaseStudyProgress + \" =============\")\n        setCookie(cookieKeyNames.CASESTUDYS_ALL,newCaseStudyProgress,{ path: '/' })  \n    }\n  },[state.step])  \n\n  // =================== GET PAGES DATA ==================\n\n  const resourcesAr = get(data, 'allNodeQuestion.nodes')\n  const resourcesAnswersAr = get(data, 'allNodeAnswer.nodes')\n\n  let resources = null\n        \n  switch (state.step) {\n      case whichTreatmentSteps.QUESTION_POSED:\n        resources = getSlideData(resourcesAr,whichTreatmentSlugNames.QUESTION_POSED)\n        break\n      case whichTreatmentSteps.CORRECT_VETMEDIN:\n        resources = getSlideData(resourcesAnswersAr,whichTreatmentSlugNames.CORRECT_VETMEDIN)\n        break\n      case whichTreatmentSteps.INCORRECT_ANSWER_ACE:\n        resources = getSlideData(resourcesAnswersAr,whichTreatmentSlugNames.INCORRECT_ANSWER_ACE)\n        break\n      case whichTreatmentSteps.INCORRECT_ANSWER_SPIRO:\n            resources = getSlideData(resourcesAnswersAr,whichTreatmentSlugNames.INCORRECT_ANSWER_SPIRO)\n            break\n      case whichTreatmentSteps.INCORRECT_ANSWER_ALL_DIURETICS:\n        resources = getSlideData(resourcesAnswersAr,whichTreatmentSlugNames.INCORRECT_ANSWER_ALL_DIURETICS)\n        break\n    default:\n      return \"no current slide\"\n  }\n  console.log(\"=========== current Step - step \",state.step)\n  console.log(resources)\n  if (!resources) return \"resources not found\"\n  if (resources == \"NO_DATA_FOUND\") return \"resources not found\"\n\n  // =================== NAVIGATION  ==================\n\n  const setCurrentStep = (step) => {   \n    console.log(\"=========== setCurrentStep - step \",step)\n    setState({...state, step: step})\n  }\n\n  const tryAgain = (e) => {\n    setState({...state, step: whichTreatmentSteps.QUESTION_POSED})\n  }\n\n  const answerSelected = (e) => {\n    if (e.currentTarget.id) {\n      console.log(\"========== e.currentTarget.id ========\",e.currentTarget.id)\n      switch (e.currentTarget.id) {\n          case (whichTreatmentSteps.CORRECT_VETMEDIN):\n               console.log(\"answerSelected - ichTreatmentSteps.CORRECT_VETMEDIN\")\n                setCurrentStep(whichTreatmentSteps.CORRECT_VETMEDIN)\n          break\n          case (whichTreatmentSteps.INCORRECT_ANSWER_ACE):\n                setCurrentStep(whichTreatmentSteps.INCORRECT_ANSWER_ACE)\n          break\n          case (whichTreatmentSteps.INCORRECT_ANSWER_ALL_DIURETICS):\n                setCurrentStep(whichTreatmentSteps.INCORRECT_ANSWER_ALL_DIURETICS)\n          break\n          case (whichTreatmentSteps.INCORRECT_ANSWER_SPIRO):\n            setCurrentStep(whichTreatmentSteps.INCORRECT_ANSWER_SPIRO)\n          break\n          default:\n              console.log(\"no matching id on question button\")\n              setCurrentStep(whichTreatmentSteps.QUESTION_POSED)\n      }\n    } else {\n      console.log(\"no id on question button\")\n      setCurrentStep(whichTreatmentSteps.QUESTION_POSED)\n    }\n    \n  }\n\n  const handleLeftClick = (e) => {\n      console.log(\"handleLeftClick\")\n  }\n\n  const handleRightClick = (e) => {\n      console.log(\"handleRightClick\")\n  }\n\n  return (<Layout headerText={replaceDogName(\"TEMP PAGE\",dogChoice)} showPercentIndicator={true}>\n  <BottomNavigationLink to={\"/certificate-request/\"}\n              distanceFromSide={\"2%\"}\n              bottom={\"2%\"}\n              direction={bottomNavigationLinkDirection.FORWARD}\n              linkText={\"Continue\"}\n  /> \n  </Layout>\n  )\n\n  return (\n    <Layout headerText={replaceDogName(\"Poppy has a grade 3 mitral valve murmur\",dogChoice)} showPercentIndicator={true}>\n\n     {((whichTreatmentSteps.CORRECT_VETMEDIN === state.step)) ?\n      <BottomNavigationLink to={\"/owner-treatment-options/\"}\n                  distanceFromSide={\"2%\"}\n                  bottom={\"2%\"}\n                  direction={bottomNavigationLinkDirection.FORWARD}\n                  linkText={\"Continue\"}\n      /> : '' }\n\n      <div className={(useStyles()).root} style={{position: 'relative', zIndex:'1 !important'}}>\n\n           { (whichTreatmentSteps.QUESTION_POSED  === state.step) ? \n           <WhichTreatmentQuestionResponseLayout type={slideTypes.QUESTION_POSED} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={answerSelected} /> : '' }\n           \n           { (whichTreatmentSteps.CORRECT_VETMEDIN === state.step) ? \n           <WhichTreatmentQuestionResponseLayout type={slideTypes.ANSWER_WITH_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={handleRightClick} /> : '' }\n         \n           { (whichTreatmentSteps.INCORRECT_ANSWER_ACE === state.step) ? \n           <WhichTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n            { (whichTreatmentSteps.INCORRECT_ANSWER_ALL_DIURETICS === state.step) ? \n           <WhichTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n            { (whichTreatmentSteps.INCORRECT_ANSWER_SPIRO === state.step) ? \n           <WhichTreatmentQuestionResponseLayout type={slideTypes.ANSWER_NO_VIDEO} resources={resources} dogChoice={dogChoice} navigationLeftHandler={handleLeftClick} navigationRightHandler={tryAgain} /> : '' }\n       \n      </div>\n  </Layout>\n\n)}\n\nconst WhichTreatmentQuestionResponseLayout = ({type = slideTypes.QUESTION_POSED, resources, navigationLeftHandler, navigationRightHandler, dogChoice }) => {\n  //debugger\n  let buttonLinks = []\n  if (resources.field_buttonlinks && resources.field_buttonlinks.length > 0) {\n     // this get over ridden\n     buttonLinks = resources.field_buttonlinks\n  }\n\n  console.log(\"WhichTreatmentQuestionResponseLayout \",resources)\n\n  let currentCaseStudySlideData = {}\n  switch (type) {\n      case slideTypes.ANSWER_WITH_VIDEO:\n      case slideTypes.ANSWER_NO_VIDEO:\n\n                const isCorrectAnswer = resources.field_iscorrectanswer[0] === \"yes\" ? true : false\n\n                buttonLinks = [{}]\n\n                if (isCorrectAnswer === false) {\n\n                    buttonLinks[0].id = whichTreatmentSteps.QUESTION_POSED\n                    buttonLinks[0].title = \"Try again\"\n                    buttonLinks[0].url = \"/\"\n                    buttonLinks[0].onClickHandler = navigationRightHandler\n                    buttonLinks[0].buttonType = legacyButtonTypes.DARK_BLUE_ROUNDED\n\n                } \n                //debugger\n\n                // =========== NORMALISE DRUPAL DATA ========\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: isCorrectAnswer,\n                    isCorrectAnswer: resources.field_iscorrectanswer[0],\n                    answerHeader: replaceDogName(removeParagraphsTags(resources.field_answerheader ? resources.field_answerheader : ''), dogChoice),\n                    answerText: replaceDogName(removeParagraphsTags(resources.field_answertext ? resources.field_answertext.processed : ''), dogChoice), \n                    additionalText: replaceDogName(removeParagraphsTags(resources.field_additionalbodytext ? resources.field_additionalbodytext.processed : ''), dogChoice), \n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks,\n                }\n           break\n      case slideTypes.QUESTION_POSED:\n                // =========== NORMALISE DRUPAL DATA ========\n\n                buttonLinks = [{},{},{},{},{},{}]\n\n                buttonLinks[0].id = whichTreatmentSteps.CORRECT_VETMEDIN\n                buttonLinks[0].title = \"Vetmedin®\"//(pimobendan)\n                buttonLinks[0].url = \"/\"\n\n                buttonLinks[1].id = whichTreatmentSteps.INCORRECT_ANSWER_ALL_DIURETICS\n                buttonLinks[1].title = \"Diuretics\"\n                buttonLinks[1].url = \"/\"\n\n                buttonLinks[2].id = whichTreatmentSteps.INCORRECT_ANSWER_SPIRO\n                buttonLinks[2].title = \"Spironolactone\"\n                buttonLinks[2].url = \"/\"\n\n                buttonLinks[3].id = whichTreatmentSteps.INCORRECT_ANSWER_ACE\n                buttonLinks[3].title = \"ACE inhibitors\"\n                buttonLinks[3].url = \"/\"\n\n                currentCaseStudySlideData = {\n                    useVideoWidget: false,\n                    questionText: resources.field_questiontext,\n                    headerText: resources.field_questiontext,\n                    additionalText: resources.field_additionalbodytext,\n                    videoText1: resources.field_videocaptiontext1,\n                    buttonLinks: buttonLinks\n                }\n          break\n    default:\n         return \"type not found\"\n  }\n\n  const ref = React.createRef();\n\n  return (\n    <section>\n   \n    <Grid container  \n    spacing={0} \n    spacing={0} \n    justify=\"center\" \n    style={{border: '0px solid black'}}>\n   \n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n      <Grid item xs={12} sm={5}  align=\"center\" style={{border: '0px solid red'}}>\n       \n          <FixedSizeVideoWidget autoPlay=\"true\" ref={ref} data={currentCaseStudySlideData} /> \n       \n      </Grid>\n\n      <Grid item xs={12} sm={5}  align=\"left\" style={{ border: '0px solid red' }}>\n        {(type === slideTypes.QUESTION_POSED) ?\n          <QuestionPosed data={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationRightHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> : ''\n        }\n\n        {(type === slideTypes.ANSWER_WITH_VIDEO || type === slideTypes.ANSWER_NO_VIDEO) ?\n          <QuestionResponse data={currentCaseStudySlideData} currentSlidePosition={0} onClickHandler={navigationLeftHandler} dogChoice={dogChoice} useVideoWidget={currentCaseStudySlideData.useVideoWidget} /> :''\n        }\n            \n      </Grid>\n\n      <Grid item xs={12} sm={1}  align=\"left\" style={{border: '0px solid red'}}></Grid>\n\n    </Grid>\n    </section>\n  )\n}\n\nexport default NextSteps\n\nexport const pageQuery = graphql`\n  {\n    allNodeQuestion {\n      nodes {\n        created(fromNow: false)\n        drupal_id\n        field_accessibilityvideotext\n        field_additionalbodytext {\n          processed\n        }\n        field_animationvideoname\n        field_backlink {\n          title\n          uri\n        }\n        field_buttonlinks {\n          title\n          uri\n        }\n        field_continuelink {\n          title\n          uri\n        }\n        field_instructionstext {\n          processed\n        }\n        field_optioniscorrect1\n        field_optioniscorrect2\n        field_optioniscorrect3\n        field_optioniscorrect4\n        field_optioniscorrect5\n        field_optioniscorrect6\n        field_optionlink1 {\n          title\n          uri\n        }\n        field_optionsbodytext1 {\n          processed\n        }\n        field_optionsbodytext2 {\n          processed\n        }\n        field_optionsbodytext3 {\n          processed\n        }\n        field_optionsbodytext4 {\n          processed\n        }\n        field_optionsbodytext5 {\n          processed\n        }\n        field_optionsbodytext6 {\n          processed\n        }\n        field_optionsheader1\n        field_progresspercent\n        field_questiontext {\n          processed\n        }\n        path {\n          alias\n        }\n      }\n    }\n    allNodeAnswer {\n    nodes {\n      drupal_id\n      created(fromNow: false)\n      field_accessibilityvideotext\n      field_additionalbodytext {\n        processed\n      }\n      field_animationvideoname\n      field_answerheader\n      field_answertext {\n        processed\n      }\n      field_buttonlinks {\n        title\n        uri\n      }\n      field_continuelink {\n        title\n        uri\n      }\n      field_iscorrectanswer\n      field_progresspercent\n      field_slugname\n      field_topheadertext {\n        processed\n      }\n      field_videocaptiontext1 {\n        processed\n      }\n      field_videoduration1\n      field_videonarrator1\n      field_videoposterimage1 {\n        width\n        alt\n        height\n        title\n      }\n      field_videothumbnail1 {\n        alt\n        height\n        title\n        width\n      }\n      path {\n        alias\n      }\n      field_videocaptiontext2 {\n        processed\n      }\n      field_videocaptiontext3 {\n        processed\n      }\n      field_videofordog1\n      field_videofordog2\n      field_videofordog3\n      field_videonarrator2\n      field_videonarrator3\n      field_videoposterimage2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videoposterimage3 {\n        alt\n        height\n        title\n        width\n      }\n      field_videothumbnail2 {\n        alt\n        height\n        title\n        width\n      }\n      field_videotitle1 {\n        processed\n      }\n      field_videotitle2 {\n        processed\n      }\n      field_videotitle3 {\n        processed\n      }\n      relationships {\n        field_video1 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n                internal {\n                  content\n                  description\n                  ignoreType\n                  mediaType\n                }\n              }\n              filesize\n              filename\n              uri {\n                value\n                url\n              }\n            }\n          }\n        }\n        field_video2 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n        field_videoposterimage1 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage2 {\n          localFile {\n            url\n          }\n        }\n        field_videoposterimage3 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail1 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail2 {\n          localFile {\n            url\n          }\n        }\n        field_videothumbnail3 {\n          localFile {\n            url\n          }\n        }\n        field_video3 {\n          relationships {\n            field_media_video_file {\n              localFile {\n                url\n              }\n              uri {\n                url\n                value\n              }\n            }\n          }\n        }\n      }\n      field_videonarratorlocation1 {\n        processed\n      }\n      field_videonarratorlocation2 {\n        processed\n      }\n      field_videonarratorlocation3 {\n        processed\n      }\n      field_videonarratorprofession1 {\n        processed\n      }\n      field_videonarratorprofession2 {\n        processed\n      }\n      field_videonarratorprofession3 {\n        processed\n      }\n      field_videoduration3\n      field_videoduration2\n      field_videothumbnail3 {\n        alt\n        height\n        title\n        width\n      }\n    }\n  }\n  }\n  `\n\n\n\n","import React from \"react\"\nimport ArrowBackRoundedIcon from '@material-ui/icons/ArrowBackRounded'\nimport ArrowForwardRoundedIcon from '@material-ui/icons/ArrowForwardRounded'\nimport theme, {md,sm,lg,xl,xs} from '../theme'\nimport WebsiteLink, {buttonStyleType} from '../components/WebsiteLink'\nimport styled from 'styled-components'\n\nconst LinkHolder = styled.div`\n    position: absolute;\n    width: 150px;\n    height: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n    align-content: center;\n    text-align: center;\n    border: 0px solid red;\n    z-index: 10;\n    @media (max-width: ${md}px) {\n        display: block;\n        position: static;\n        width:100% !important;\n    }\n`\n\nconst LinkHolderLeft = styled(LinkHolder)`\n    @media (max-width: ${md}px) {\n        text-align:right;\n    }\n`\n\nconst LinkHolderRight = styled(LinkHolder)`\n    @media (max-width: ${md}px) {\n        text-align:left;\n    }\n`\n\nconst BottomNavigationLink = ({linkText = 'Back',to = '/', distanceFromSide = \"10%\", bottom = \"0\", direction = \"forward\", onClick = null}) => {\n    if (direction === \"forward\") {\n        return (\n            <LinkHolderLeft style={{\n                right: distanceFromSide, \n                bottom: bottom\n            }}> \n                <WebsiteLink onClick={onClick} \n                    style={{display: 'flex',\n                        flexDirection:'row',\n                        alignItems:'center',\n                        width:'200px',\n                        height:'50px',\n                        textDecoration:'none',\n                        color:theme.palette.deminBlue.main,\n                        fontFamily:theme.typography.fontFamily,\n                        fontWeight:'700'\n                    }} \n                    to={to}\n                    typeOfButton={buttonStyleType.FORWARD_NORMAL_LINK}>\n                        {linkText}\n                </WebsiteLink>\n            </LinkHolderLeft>\n        )\n    } else {\n        return (\n            <LinkHolderRight style={{\n                left: distanceFromSide, \n                bottom: bottom,\n            }}>   \n                <WebsiteLink onClick={onClick} \n                    style={{display: 'flex',\n                        flexDirection:'row',\n                        alignItems:'center',\n                        alignContent:'center',\n                        width:'200px',\n                        height:'50px',\n                        textDecoration:'none',\n                        color:theme.palette.deminBlue.main,\n                        fontFamily:theme.typography.fontFamily,\n                        fontWeight:'700'\n                    }} \n                    to={to}\n                    typeOfButton={buttonStyleType.BACK_NORMAL_LINK}>\n                        {linkText}\n                </WebsiteLink> \n            </LinkHolderRight>  \n        )\n    }\n}\n\nexport default BottomNavigationLink\n\n"],"sourceRoot":""}